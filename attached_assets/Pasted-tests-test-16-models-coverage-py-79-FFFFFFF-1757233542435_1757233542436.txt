tests/test_16_models_coverage.py ................................................... [ 79%]
FFFFFFFF.FF.F                                                                        [100%]

========================================= FAILURES =========================================
___________________ TestVacancyFactory.test_factory_create_schedule_dict ___________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e401950>

    def test_factory_create_schedule_dict(self):
        """Покрытие создания графика из словаря"""
        sch_data = {"name": "Удаленно", "id": "remote"}
>       schedule = VacancyFactory._create_schedule(sch_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'

tests/test_16_models_coverage.py:575: AttributeError
__________________ TestVacancyFactory.test_factory_create_schedule_string __________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e402550>

    def test_factory_create_schedule_string(self):
        """Покрытие создания графика из строки"""
>       schedule = VacancyFactory._create_schedule("Вахта")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'

tests/test_16_models_coverage.py:583: AttributeError
___________________ TestVacancyFactory.test_factory_create_schedule_none ___________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e400190>

    def test_factory_create_schedule_none(self):
        """Покрытие создания графика из None"""
>       schedule = VacancyFactory._create_schedule(None)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'

tests/test_16_models_coverage.py:590: AttributeError
___________________ TestVacancyFactory.test_factory_create_salary_valid ____________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e5b3710>

    def test_factory_create_salary_valid(self):
        """Покрытие создания зарплаты из валидного словаря"""
        salary_data = {"from": 50000, "to": 80000, "currency": "USD"}
>       salary = VacancyFactory._create_salary(salary_data)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_create_salary'

tests/test_16_models_coverage.py:597: AttributeError
__________________ TestVacancyFactory.test_factory_create_salary_invalid ___________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e5edfd0>

    def test_factory_create_salary_invalid(self):
        """Покрытие создания зарплаты из невалидного словаря"""
        # Невалидные данные
>       salary = VacancyFactory._create_salary({"invalid": "data"})
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_create_salary'

tests/test_16_models_coverage.py:607: AttributeError
___________________ TestVacancyFactory.test_factory_extract_description ____________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e5eef10>

    def test_factory_extract_description(self):
        """Покрытие извлечения описания"""
        data_with_snippet = {
            "snippet": {
                "requirement": "Python",
                "responsibility": "Development"
            }
        }
    
>       description = VacancyFactory._extract_description(data_with_snippet)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_extract_description'

tests/test_16_models_coverage.py:627: AttributeError
_______________________ TestVacancyFactory.test_factory_extract_area _______________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e5ecc90>

    def test_factory_extract_area(self):
        """Покрытие извлечения области"""
        data_with_area = {"area": {"name": "Новосибирск"}}
>       area = VacancyFactory._extract_area(data_with_area)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute '_extract_area'

tests/test_16_models_coverage.py:638: AttributeError
_________________ TestVacancyFactory.test_factory_with_exception_handling __________________

self = <tests.test_16_models_coverage.TestVacancyFactory object at 0x7f8b1e5ec7d0>

    def test_factory_with_exception_handling(self):
        """Покрытие обработки исключений в фабрике"""
        # Данные которые могут вызвать ошибку
        problematic_data = {
            "name": "Test",
            "employer": {"name": "Test"},
            "salary": {"from": "invalid_number"}  # Невалидная зарплата
        }
    
        # Фабрика должна обработать исключение и создать вакансию
>       vacancy = VacancyFactory.create_from_dict(problematic_data)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute 'create_from_dict'

tests/test_16_models_coverage.py:655: AttributeError
___________________ TestModelValidation.test_field_assignment_validation ___________________

self = <tests.test_16_models_coverage.TestModelValidation object at 0x7f8b1e5ef890>

    def test_field_assignment_validation(self):
        """Покрытие validate_assignment=True"""
        employer = Employer(name="Test")
    
        # Валидное присваивание
        employer.name = "New Name"
        assert employer.name == "New Name"
    
        # Присваивание пустого имени должно валидироваться
>       employer.name = ""
        ^^^^^^^^^^^^^

tests/test_16_models_coverage.py:688: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.pythonlibs/lib/python3.11/site-packages/pydantic/main.py:995: in __setattr__
    setattr_handler(self, name, value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

model = Employer(name='New Name', id=None, trusted=None, alternate_url=None), name = 'name'
val = ''

>       'validate_assignment': lambda model, name, val: model.__pydantic_validator__.validate_assignment(model, name, val),  # pyright: ignore[reportAssignmentType]
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        'private': _private_setattr_handler,
        'cached_property': lambda model, name, val: model.__dict__.__setitem__(name, val),
        'extra_known': lambda model, name, val: _object_setattr(model, name, val),
    }
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Employer
E   name
E     String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
E       For further information visit https://errors.pydantic.dev/2.11/v/string_too_short

.pythonlibs/lib/python3.11/site-packages/pydantic/main.py:114: ValidationError
__________________________ TestEdgeCases.test_large_data_handling __________________________

self = <tests.test_16_models_coverage.TestEdgeCases object at 0x7f8b1e5ed010>

    def test_large_data_handling(self):
        """Покрытие обработки больших объемов данных"""
        large_description = "A" * 10000  # Большое описание
    
>       vacancy = Vacancy(
            title="Large Data Test",
            employer=Employer(name="Big Company"),
            description=large_description
        )
E       pydantic_core._pydantic_core.ValidationError: 3 validation errors for Vacancy
E       vacancy_id
E         Field required [type=missing, input_value={'title': 'Large Data Tes...AAAAAAAAAAAAAAAAAAAAAA'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       name
E         Field required [type=missing, input_value={'title': 'Large Data Tes...AAAAAAAAAAAAAAAAAAAAAA'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       alternate_url
E         Field required [type=missing, input_value={'title': 'Large Data Tes...AAAAAAAAAAAAAAAAAAAAAA'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_16_models_coverage.py:699: ValidationError
__________________________ TestEdgeCases.test_nested_dict_access ___________________________

self = <tests.test_16_models_coverage.TestEdgeCases object at 0x7f8b1e5fbe90>

    def test_nested_dict_access(self):
        """Покрытие глубокого доступа к вложенным данным"""
        complex_data = {
            "name": "Complex Job",
            "employer": {
                "name": "Nested Company",
                "nested": {
                    "deep": "value"
                }
            },
            "snippet": {
                "requirement": "Complex requirement",
                "responsibility": None  # None значение
            }
        }
    
>       vacancy = VacancyFactory.create_from_dict(complex_data)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VacancyFactory' has no attribute 'create_from_dict'

tests/test_16_models_coverage.py:732: AttributeError
================================= short test summary info ==================================
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_create_schedule_dict - AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_create_schedule_string - AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_create_schedule_none - AttributeError: type object 'VacancyFactory' has no attribute '_create_schedule'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_create_salary_valid - AttributeError: type object 'VacancyFactory' has no attribute '_create_salary'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_create_salary_invalid - AttributeError: type object 'VacancyFactory' has no attribute '_create_salary'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_extract_description - AttributeError: type object 'VacancyFactory' has no attribute '_extract_description'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_extract_area - AttributeError: type object 'VacancyFactory' has no attribute '_extract_area'
FAILED tests/test_16_models_coverage.py::TestVacancyFactory::test_factory_with_exception_handling - AttributeError: type object 'VacancyFactory' has no attribute 'create_from_dict'
FAILED tests/test_16_models_coverage.py::TestModelValidation::test_field_assignment_validation - pydantic_core._pydantic_core.ValidationError: 1 validation error for Employer
FAILED tests/test_16_models_coverage.py::TestEdgeCases::test_large_data_handling - pydantic_