~/workspace$ pytest tests/test_cached_api.py
============================ test session starts =============================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace/tests
configfile: pytest.ini
plugins: mock-3.14.1, cov-6.2.1
collected 4 items                                                            

tests/test_cached_api.py FFFF                                          [100%]

================================== FAILURES ==================================
_____________________ TestCachedAPI.test_initialization ______________________

self = <tests.test_cached_api.TestCachedAPI object at 0x7fdb987329d0>

    def test_initialization(self):
        """Тест инициализации"""
        with tempfile.TemporaryDirectory() as temp_dir:
>           api = ConcreteCachedAPI(temp_dir)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: Can't instantiate abstract class ConcreteCachedAPI with abstract methods get_vacancies, get_vacancies_page

tests/test_cached_api.py:28: TypeError
________________ TestCachedAPI.test_connect_to_api_with_cache ________________

args = (<tests.test_cached_api.TestCachedAPI object at 0x7fdb9673a1d0>,)
keywargs = {}

    @wraps(func)
    def patched(*args, **keywargs):
>       with self.decoration_helper(patched,
                                    args,
                                    keywargs) as (newargs, newkeywargs):

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fdb9672da50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.api_modules.cached_api' from '/home/runner/workspace/src/api_modules/cached_api.py'> does not have the attribute 'APIConnector'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError
______________ TestCachedAPI.test_connect_to_api_without_cache _______________

args = (<tests.test_cached_api.TestCachedAPI object at 0x7fdb9673a850>,)
keywargs = {}

    @wraps(func)
    def patched(*args, **keywargs):
>       with self.decoration_helper(patched,
                                    args,
                                    keywargs) as (newargs, newkeywargs):

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fdb96738350>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.api_modules.cached_api' from '/home/runner/workspace/src/api_modules/cached_api.py'> does not have the attribute 'APIConnector'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError
_______________________ TestCachedAPI.test_clear_cache _______________________

self = <tests.test_cached_api.TestCachedAPI object at 0x7fdb9673af50>

    def test_clear_cache(self):
        """Тест очистки кэша"""
        with tempfile.TemporaryDirectory() as temp_dir:
>           api = ConcreteCachedAPI(temp_dir)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: Can't instantiate abstract class ConcreteCachedAPI with abstract methods get_vacancies, get_vacancies_page

tests/test_cached_api.py:69: TypeError
========================== short test summary info ===========================
FAILED tests/test_cached_api.py::TestCachedAPI::test_initialization - TypeError: Can't instantiate abstract class ConcreteCachedAPI with abstra...
FAILED tests/test_cached_api.py::TestCachedAPI::test_connect_to_api_with_cache - AttributeError: <module 'src.api_modules.cached_api' from '/home/runner/w...
FAILED tests/test_cached_api.py::TestCachedAPI::test_connect_to_api_without_cache - AttributeError: <module 'src.api_modules.cached_api' from '/home/runner/w...
FAILED tests/test_cached_api.py::TestCachedAPI::test_clear_cache - TypeError: Can't instantiate abstract class ConcreteCachedAPI with abstra...
============================= 4 failed in 0.32s ==============================
~/workspace$ 