~/workspace$ pytest tests/test_console_interface.py
============================ test session starts =============================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace/tests
configfile: pytest.ini
plugins: mock-3.14.1, cov-6.2.1
collected 29 items                                                           

tests/test_console_interface.py ..FFFFFFFFFFFFFFFFF......F...          [100%]

================================== FAILURES ==================================
______________________ TestUserInterface.test_show_menu ______________________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd2b950>
mock_print = <MagicMock name='print' id='140603200985424'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bbd2a110>

    @patch('builtins.print')
    def test_show_menu(self, mock_print, user_interface):
        """Тест отображения меню"""
>       user_interface.show_menu()
        ^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_menu'

tests/test_console_interface.py:84: AttributeError
______________ TestUserInterface.test_get_period_choice_default ______________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd30110>
mock_input = <MagicMock name='input' id='140603200805904'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bbd43810>

    @patch('builtins.input', return_value='1')
    def test_get_period_choice_default(self, mock_input, user_interface):
        """Тест выбора периода по умолчанию"""
>       result = user_interface.get_period_choice()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'get_period_choice'

tests/test_console_interface.py:96: AttributeError
______________ TestUserInterface.test_get_period_choice_custom _______________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd30890>
mock_input = <MagicMock name='input' id='140603196184656'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb92a590>

    @patch('builtins.input', side_effect=['2', '7'])
    def test_get_period_choice_custom(self, mock_input, user_interface):
        """Тест выбора пользовательского периода"""
>       result = user_interface.get_period_choice()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'get_period_choice'

tests/test_console_interface.py:102: AttributeError
__________ TestUserInterface.test_get_period_choice_invalid_custom ___________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd30fd0>
mock_print = <MagicMock name='print' id='140603200874960'>
mock_input = <MagicMock name='input' id='140603200895376'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bcdbe950>

    @patch('builtins.input', side_effect=['2', 'invalid', '5'])
    @patch('builtins.print')
    def test_get_period_choice_invalid_custom(self, mock_print, mock_input, user_interface):
        """Тест обработки некорректного ввода периода"""
>       result = user_interface.get_period_choice()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'get_period_choice'

tests/test_console_interface.py:109: AttributeError
______________ TestUserInterface.test_get_period_choice_cancel _______________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd31750>
mock_input = <MagicMock name='input' id='140603196969104'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9c3490>

    @patch('builtins.input', return_value='0')
    def test_get_period_choice_cancel(self, mock_input, user_interface):
        """Тест отмены выбора периода"""
>       result = user_interface.get_period_choice()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'get_period_choice'

tests/test_console_interface.py:115: AttributeError
________ TestUserInterface.test_get_period_choice_keyboard_interrupt _________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd31ed0>
mock_input = <MagicMock name='input' id='140603217929680'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9369d0>

    @patch('builtins.input', side_effect=KeyboardInterrupt)
    def test_get_period_choice_keyboard_interrupt(self, mock_input, user_interface):
        """Тест обработки KeyboardInterrupt"""
>       result = user_interface.get_period_choice()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'get_period_choice'

tests/test_console_interface.py:121: AttributeError
___________ TestUserInterface.test_show_vacancies_for_deletion_all ___________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd32610>
mock_print = <MagicMock name='print' id='140603196789456'>
mock_input = <MagicMock name='input' id='140603197116880'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9cd410>

    @patch('builtins.input', side_effect=['all', 'y'])
    @patch('builtins.print')
    def test_show_vacancies_for_deletion_all(self, mock_print, mock_input, user_interface):
        """Тест отображения всех вакансий для удаления"""
        # Настройка мок данных
        user_interface.storage.get_all_vacancies.return_value = [
            Mock(vacancy_id='1', title='Test Vacancy 1'),
            Mock(vacancy_id='2', title='Test Vacancy 2')
        ]
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:134: AttributeError
_________ TestUserInterface.test_show_vacancies_for_deletion_single __________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd32d10>
mock_print = <MagicMock name='print' id='140603200774032'>
mock_input = <MagicMock name='input' id='140603196406544'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9e7890>

    @patch('builtins.input', side_effect=['1', 'y'])
    @patch('builtins.print')
    def test_show_vacancies_for_deletion_single(self, mock_print, mock_input, user_interface):
        """Тест отображения одной вакансии для удаления"""
        user_interface.storage.get_all_vacancies.return_value = [
            Mock(vacancy_id='1', title='Test Vacancy')
        ]
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:147: AttributeError
__________ TestUserInterface.test_show_vacancies_for_deletion_quit ___________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd33490>
mock_input = <MagicMock name='input' id='140603196835088'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9a0790>

    @patch('builtins.input', return_value='quit')
    def test_show_vacancies_for_deletion_quit(self, mock_input, user_interface):
        """Тест выхода из удаления вакансий"""
        user_interface.storage.get_all_vacancies.return_value = [
            Mock(vacancy_id='1', title='Test Vacancy')
        ]
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:158: AttributeError
__________ TestUserInterface.test_show_vacancies_for_deletion_range __________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bc900cd0>
mock_print = <MagicMock name='print' id='140603197014416'>
mock_input = <MagicMock name='input' id='140603200570128'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9bded0>

    @patch('builtins.input', side_effect=['1-3', 'y'])
    @patch('builtins.print')
    def test_show_vacancies_for_deletion_range(self, mock_print, mock_input, user_interface):
        """Тест удаления диапазона вакансий"""
        user_interface.storage.get_all_vacancies.return_value = [
            Mock(vacancy_id='1', title='Test 1'),
            Mock(vacancy_id='2', title='Test 2'),
            Mock(vacancy_id='3', title='Test 3'),
            Mock(vacancy_id='4', title='Test 4')
        ]
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:173: AttributeError
______ TestUserInterface.test_show_vacancies_for_deletion_invalid_range ______

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd30a10>
mock_print = <MagicMock name='print' id='140603196939216'>
mock_input = <MagicMock name='input' id='140603196946512'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9b9e50>

    @patch('builtins.input', side_effect=['invalid-range', '1', 'y'])
    @patch('builtins.print')
    def test_show_vacancies_for_deletion_invalid_range(self, mock_print, mock_input, user_interface):
        """Тест обработки некорректного диапазона"""
        user_interface.storage.get_all_vacancies.return_value = [
            Mock(vacancy_id='1', title='Test Vacancy')
        ]
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:185: AttributeError
_______ TestUserInterface.test_show_vacancies_for_deletion_pagination ________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd33f10>
mock_print = <MagicMock name='print' id='140603197127184'>
mock_input = <MagicMock name='input' id='140603196299408'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9e6bd0>

    @patch('builtins.input', side_effect=['next', 'quit'])
    @patch('builtins.print')
    def test_show_vacancies_for_deletion_pagination(self, mock_print, mock_input, user_interface):
        """Тест пагинации при удалении вакансий"""
        # Создаем много вакансий для тестирования пагинации
        vacancies = [Mock(vacancy_id=str(i), title=f'Test {i}') for i in range(1, 25)]
        user_interface.storage.get_all_vacancies.return_value = vacancies
    
>       result = user_interface.show_vacancies_for_deletion()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'UserInterface' object has no attribute 'show_vacancies_for_deletion'

tests/test_console_interface.py:197: AttributeError
___________ TestUserInterface.test_display_vacancies_static_method ___________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd40350>
mock_print = <MagicMock name='print' id='140603192009296'>

    @patch('builtins.print')
    def test_display_vacancies_static_method(self, mock_print):
        """Тест статического метода отображения вакансий"""
        vacancies = [
            Mock(vacancy_id='1', title='Test Vacancy 1'),
            Mock(vacancy_id='2', title='Test Vacancy 2')
        ]
    
>       UserInterface.display_vacancies(vacancies)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'UserInterface' has no attribute 'display_vacancies'

tests/test_console_interface.py:209: AttributeError
___ TestUserInterface.test_display_vacancies_with_pagination_static_method ___

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd406d0>
mock_print = <MagicMock name='print' id='140603192366544'>
mock_input = <MagicMock name='input' id='140603192372624'>

    @patch('builtins.input', side_effect=['next', 'quit'])
    @patch('builtins.print')
    def test_display_vacancies_with_pagination_static_method(self, mock_print, mock_input):
        """Тест статического метода отображения вакансий с пагинацией"""
        vacancies = [Mock(vacancy_id=str(i), title=f'Test {i}') for i in range(1, 25)]
    
>       UserInterface.display_vacancies_with_pagination(vacancies)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'UserInterface' has no attribute 'display_vacancies_with_pagination'

tests/test_console_interface.py:220: AttributeError
_______________ TestUserInterface.test_run_keyboard_interrupt ________________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd40ad0>
mock_print = <MagicMock name='print' id='140603196484112'>
mock_input = <MagicMock name='input' id='140603196371216'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb92d6d0>

    @patch('builtins.input', side_effect=KeyboardInterrupt)
    @patch('builtins.print')
    def test_run_keyboard_interrupt(self, mock_print, mock_input, user_interface):
        """Тест обработки KeyboardInterrupt в основном цикле"""
>       with patch.object(user_interface, 'show_menu'):

tests/test_console_interface.py:228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe0bb94aa90>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb92d6d0> does not have the attribute 'show_menu'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError
_______________ TestUserInterface.test_run_exception_handling ________________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd40ed0>
mock_print = <MagicMock name='print' id='140603196909776'>
mock_input = <MagicMock name='input' id='140603196904208'>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9b2590>

    @patch('builtins.input', side_effect=['invalid', '0'])
    @patch('builtins.print')
    def test_run_exception_handling(self, mock_print, mock_input, user_interface):
        """Тест обработки исключений в основном цикле"""
>       with patch.object(user_interface, 'show_menu'), \
             patch.object(user_interface, 'handle_menu_choice', side_effect=Exception("Test error")):

tests/test_console_interface.py:240: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fe0bb9e79d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb9b2590> does not have the attribute 'show_menu'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError
____________ TestUserInterface.test_handle_menu_choice_structure _____________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd415d0>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb534fd0>

    def test_handle_menu_choice_structure(self, user_interface):
        """Тест структуры обработчика выбора меню"""
        # Проверяем, что метод существует
>       assert hasattr(user_interface, 'handle_menu_choice')
E       AssertionError: assert False
E        +  where False = hasattr(<src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb534fd0>, 'handle_menu_choice')

tests/test_console_interface.py:248: AssertionError
________________ TestUserInterface.test_menu_choices_coverage ________________

self = <tests.test_console_interface.TestUserInterface object at 0x7fe0bbd44750>
user_interface = <src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb955150>

    def test_menu_choices_coverage(self, user_interface):
        """Тест покрытия всех пунктов меню"""
        # Проверяем, что есть обработчик для основных пунктов меню
        menu_methods = [
            'handle_menu_choice',
            'show_menu',
            'run'
        ]
    
        for method in menu_methods:
>           assert hasattr(user_interface, method), f"Missing method: {method}"
E           AssertionError: Missing method: handle_menu_choice
E           assert False
E            +  where False = hasattr(<src.ui_interfaces.console_interface.UserInterface object at 0x7fe0bb955150>, 'handle_menu_choice')

tests/test_console_interface.py:330: AssertionError
========================== short test summary info ===========================
FAILED tests/test_console_interface.py::TestUserInterface::test_show_menu - AttributeError: 'UserInterface' object has no attribute 'show_menu'
FAILED tests/test_console_interface.py::TestUserInterface::test_get_period_choice_default - AttributeError: 'UserInterface' object has no attribute 'get_period_choice'
FAILED tests/test_console_interface.py::TestUserInterface::test_get_period_choice_custom - AttributeError: 'UserInterface' object has no attribute 'get_period_choice'
FAILED tests/test_console_interface.py::TestUserInterface::test_get_period_choice_invalid_custom - AttributeError: 'UserInterface' object has no attribute 'get_period_choice'
FAILED tests/test_console_interface.py::TestUserInterface::test_get_period_choice_cancel - AttributeError: 'UserInterface' object has no attribute 'get_period_choice'
FAILED tests/test_console_interface.py::TestUserInterface::test_get_period_choice_keyboard_interrupt - AttributeError: 'UserInterface' object has no attribute 'get_period_choice'
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_all - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_single - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_quit - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_range - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_invalid_range - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_show_vacancies_for_deletion_pagination - AttributeError: 'UserInterface' object has no attribute 'show_vacancies_f...
FAILED tests/test_console_interface.py::TestUserInterface::test_display_vacancies_static_method - AttributeError: type object 'UserInterface' has no attribute 'display_vac...
FAILED tests/test_console_interface.py::TestUserInterface::test_display_vacancies_with_pagination_static_method - AttributeError: type object 'UserInterface' has no attribute 'display_vac...
FAILED tests/test_console_interface.py::TestUserInterface::test_run_keyboard_interrupt - AttributeError: <src.ui_interfaces.console_interface.UserInterface object...
FAILED tests/test_console_interface.py::TestUserInterface::test_run_exception_handling - AttributeError: <src.ui_interfaces.console_interface.UserInterface object...
FAILED tests/test_console_interface.py::TestUserInterface::test_handle_menu_choice_structure - AssertionError: assert False
FAILED tests/test_console_interface.py::TestUserInterface::test_menu_choices_coverage - AssertionError: Missing method: handle_menu_choice