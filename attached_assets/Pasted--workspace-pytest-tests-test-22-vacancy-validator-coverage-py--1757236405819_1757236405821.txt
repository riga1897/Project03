~/workspace$ pytest tests/test_22_vacancy_validator_coverage.py 
=================================== test session starts ====================================
platform linux -- Python 3.11.13, pytest-8.4.2, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.15.0
collected 42 items                                                                         

tests/test_22_vacancy_validator_coverage.py .......................F................ [ 95%]
..                                                                                   [100%]

========================================= FAILURES =========================================
_______________ TestVacancyValidator.test_validate_batch_exception_handling ________________

self = <tests.test_22_vacancy_validator_coverage.TestVacancyValidator.test_validate_batch_exception_handling.<locals>.ProblematicVacancy object at 0x7f157b114dd0>

    @property
    def vacancy_id(self):
>       raise Exception("Test exception")
E       Exception: Test exception

tests/test_22_vacancy_validator_coverage.py:350: Exception

During handling of the above exception, another exception occurred:

self = <tests.test_22_vacancy_validator_coverage.TestVacancyValidator object at 0x7f157c1ea890>
mock_logger = <MagicMock name='logger' id='139730235748304'>

    @patch('src.storage.components.vacancy_validator.logger')
    def test_validate_batch_exception_handling(self, mock_logger):
        """Покрытие обработки исключений в пакетной валидации"""
        validator = VacancyValidator()
    
        # Создаем объект, который вызовет исключение при доступе к атрибуту
        class ProblematicVacancy:
            @property
            def vacancy_id(self):
                raise Exception("Test exception")
    
        problematic_vacancy = ProblematicVacancy()
    
>       result = validator.validate_batch([problematic_vacancy])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_22_vacancy_validator_coverage.py:354: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/storage/components/vacancy_validator.py:150: in validate_batch
    results[getattr(vacancy, "vacancy_id", "unknown")] = False
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tests.test_22_vacancy_validator_coverage.TestVacancyValidator.test_validate_batch_exception_handling.<locals>.ProblematicVacancy object at 0x7f157b114dd0>

    @property
    def vacancy_id(self):
>       raise Exception("Test exception")
E       Exception: Test exception

tests/test_22_vacancy_validator_coverage.py:350: Exception
================================= short test summary info ==================================
FAILED tests/test_22_vacancy_validator_coverage.py::TestVacancyValidator::test_validate_batch_exception_handling - Exception: Test exception
=============================== 1 failed, 41 passed in 0.57s ===============================
~/workspace$ 