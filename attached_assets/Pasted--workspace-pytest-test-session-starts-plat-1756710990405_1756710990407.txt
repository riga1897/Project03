~/workspace$ pytest
========================== test session starts ==========================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: mock-3.14.1, cov-6.2.1
collected 341 items                                                     

tests/test_abstract.py ........                                   [  2%]
tests/test_abstract_db_manager.py ....                            [  3%]
tests/test_api_config.py ....                                     [  4%]
tests/test_app_config.py .....                                    [  6%]
tests/test_base_api.py ......                                     [  7%]
tests/test_base_parser.py ......                                  [  9%]
tests/test_cache.py .......                                       [ 11%]
tests/test_cached_api.py ....F......                              [ 14%]
tests/test_db_manager.py .................                        [ 19%]
tests/test_decorators.py .......                                  [ 21%]
tests/test_env_loader.py ............                             [ 25%]
tests/test_file_handlers.py ............                          [ 29%]
tests/test_get_api.py ......                                      [ 30%]
tests/test_hh_api.py .......                                      [ 32%]
tests/test_hh_api_config.py .....                                 [ 34%]
tests/test_hh_parser.py ........                                  [ 36%]
tests/test_menu_manager.py ..........                             [ 39%]
tests/test_paginator.py ......                                    [ 41%]
tests/test_postgres_saver.py .......                              [ 43%]
tests/test_salary_utils.py ......................                 [ 49%]
tests/test_search_utils.py ..................                     [ 55%]
tests/test_sj_api.py ..............                               [ 59%]
tests/test_sj_api_config.py .....                                 [ 60%]
tests/test_sj_parser.py ........                                  [ 63%]
tests/test_storage_factory.py ........                            [ 65%]
tests/test_target_companies.py .....                              [ 66%]
tests/test_ui_config.py .....                                     [ 68%]
tests/test_ui_helpers.py ...........                              [ 71%]
tests/test_unified_api.py .................                       [ 76%]
tests/test_user_interface.py ........                             [ 78%]
tests/test_vacancy_display_handler.py .........                   [ 81%]
tests/test_vacancy_formatter.py ..............                    [ 85%]
tests/test_vacancy_models.py .........................            [ 92%]
tests/test_vacancy_operations_coordinator.py ...........          [ 96%]
tests/test_vacancy_search_handler.py ......                       [ 97%]
tests/test_vacancy_stats.py .......                               [100%]

=============================== FAILURES ================================
_________________ TestCachedAPI.test_clear_cache_method _________________

self = <Mock name='FileCache().clear' id='140173041963408'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'clear' to have been called once. Called 0 times.

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:918: AssertionError

During handling of the above exception, another exception occurred:

self = <workspace.tests.test_cached_api.TestCachedAPI object at 0x7f7c959f1b50>
mock_file_cache = <MagicMock name='FileCache' id='140173041941584'>

    @patch("src.utils.cache.FileCache")
    def test_clear_cache_method(self, mock_file_cache):
        """Тест метода очистки кэша"""
        mock_cache_instance = Mock()
        mock_cache_instance.clear.return_value = None
        mock_file_cache.return_value = mock_cache_instance
    
        api = ConcreteCachedAPI()
    
        # Проверяем наличие метода clear_cache или аналогичного
        if hasattr(api, 'clear_cache'):
            api.clear_cache("test_prefix")
>           mock_cache_instance.clear.assert_called_once()
E           AssertionError: Expected 'clear' to have been called once. Called 0 times.

tests/test_cached_api.py:124: AssertionError
=========================== warnings summary ============================
tests/test_vacancy_display_handler.py:30
  /home/runner/workspace/tests/test_vacancy_display_handler.py:30: PytestCollectionWarning: cannot collect test class 'TestableVacancyDisplayHandler' because it has a __init__ constructor (from: tests/test_vacancy_display_handler.py)
    class TestableVacancyDisplayHandler(VacancyDisplayHandler):

tests/test_vacancy_models.py:36
  /home/runner/workspace/tests/test_vacancy_models.py:36: PytestCollectionWarning: cannot collect test class 'TestableVacancy' because it has a __init__ constructor (from: tests/test_vacancy_models.py)
    class TestableVacancy(Vacancy):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== short test summary info ========================
FAILED tests/test_cached_api.py::TestCachedAPI::test_clear_cache_method - AssertionError: Expected 'clear' to have been called once. Called 0 ...
=============== 1 failed, 340 passed, 2 warnings in 1.52s ===============
~/workspace$ 