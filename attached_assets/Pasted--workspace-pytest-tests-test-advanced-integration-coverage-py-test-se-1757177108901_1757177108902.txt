~/workspace$ pytest tests/test_advanced_integration_coverage.py
=========================== test session starts ============================
platform linux -- Python 3.11.13, pytest-8.4.2, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.15.0
collected 27 items                                                         

tests/test_advanced_integration_coverage.py .F...F.................. [ 88%]
...                                                                  [100%]

================================= FAILURES =================================
_______ TestPostgresSaverAdvancedCoverage.test_save_vacancies_method _______

self = <tests.test_advanced_integration_coverage.TestPostgresSaverAdvancedCoverage object at 0x7fc3d13d8e50>
postgres_saver = <src.storage.postgres_saver.PostgresSaver object at 0x7fc3d12bf910>
mock_db_connection = (<Mock id='140479017155344'>, <Mock id='140479004932112'>)

    def test_save_vacancies_method(self, postgres_saver, mock_db_connection):
        """Тест метода сохранения вакансий"""
        mock_conn, mock_cursor = mock_db_connection
    
        test_vacancies = [
            {'id': 'pg1', 'title': 'Python Developer', 'company': 'TechCorp'},
            {'id': 'pg2', 'title': 'Java Developer', 'company': 'DevCorp'}
        ]
    
        with patch.object(postgres_saver, '_get_connection', return_value=mock_conn):
            with patch.object(postgres_saver, 'add_vacancy_batch_optimized', return_value=[]):
                result = postgres_saver.save_vacancies(test_vacancies)
>               assert isinstance(result, list)
E               assert False
E                +  where False = isinstance(0, list)

/home/runner/workspace/tests/test_advanced_integration_coverage.py:162: AssertionError
__ TestPostgresSaverAdvancedCoverage.test_postgres_large_batch_operations __

self = <tests.test_advanced_integration_coverage.TestPostgresSaverAdvancedCoverage object at 0x7fc3d13da950>
postgres_saver = <src.storage.postgres_saver.PostgresSaver object at 0x7fc3d11aa250>
mock_db_connection = (<Mock id='140479027573072'>, <Mock id='140479003986640'>)

    def test_postgres_large_batch_operations(self, postgres_saver, mock_db_connection):
        """Тест обработки больших пакетов данных"""
        mock_conn, mock_cursor = mock_db_connection
    
        large_batch = [
            {'id': f'large_{i}', 'title': f'Large Job {i}'}
            for i in range(100)
        ]
    
        with patch.object(postgres_saver, '_get_connection', return_value=mock_conn):
            with patch.object(postgres_saver, 'add_vacancy_batch_optimized', return_value=[]):
                result = postgres_saver.save_vacancies(large_batch)
>               assert isinstance(result, list)
E               assert False
E                +  where False = isinstance(0, list)

/home/runner/workspace/tests/test_advanced_integration_coverage.py:217: AssertionError
========================= short test summary info ==========================
FAILED tests/test_advanced_integration_coverage.py::TestPostgresSaverAdvancedCoverage::test_save_vacancies_method - assert False
FAILED tests/test_advanced_integration_coverage.py::TestPostgresSaverAdvancedCoverage::test_postgres_large_batch_operations - assert False
======================= 2 failed, 25 passed in 0.69s =======================
~/workspace$ 