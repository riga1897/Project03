~/workspace$ pytest --cov=src
========================= test session starts ==========================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.14.1
collected 1045 items                                                   

tests/test_abstract.py ........                                  [  0%]
tests/test_abstract_db_manager.py ....                           [  1%]
tests/test_api_config.py ....                                    [  1%]
tests/test_api_modules.py .............................          [  4%]
tests/test_api_modules_comprehensive.py .........                [  5%]
tests/test_api_modules_consolidated.py ....                      [  5%]
tests/test_app_config.py .........                               [  6%]
tests/test_base_api.py ...............                           [  7%]
tests/test_base_formatter.py ..........                          [  8%]
tests/test_base_parser.py ......                                 [  9%]
tests/test_cache.py ......................                       [ 11%]
tests/test_cached_api.py ....                                    [ 11%]
tests/test_components_fixed.py ...                               [ 12%]
tests/test_comprehensive_fixed.py ..........F................... [ 15%]
........                                                         [ 15%]
tests/test_config_consolidated.py .....                          [ 16%]
tests/test_config_modules_consolidated.py ...........            [ 17%]
tests/test_console_interface.py ......                           [ 17%]
tests/test_core_functionality_consolidated.py .....              [ 18%]
tests/test_core_modules_comprehensive.py ........                [ 19%]
tests/test_data_normalizers_comprehensive.py ................... [ 20%]
.........                                                        [ 21%]
tests/test_database_connection.py ........                       [ 22%]
tests/test_db_config.py .....                                    [ 23%]
tests/test_db_manager.py .................                       [ 24%]
tests/test_decorators.py .......                                 [ 25%]
tests/test_env_loader.py ................                        [ 26%]
tests/test_get_api.py .........................                  [ 29%]
tests/test_hh_api.py .......................E...........         [ 32%]
tests/test_hh_api_config.py .....                                [ 33%]
tests/test_hh_parser.py ........                                 [ 33%]
tests/test_integration.py .............                          [ 35%]
tests/test_main.py ......                                        [ 35%]
tests/test_main_application_interface.py F.F                     [ 35%]
tests/test_main_consolidated.py .........                        [ 36%]
tests/test_menu_manager.py ..........                            [ 37%]
tests/test_missing_components.py .........                       [ 38%]
tests/test_models_fixed.py ...                                   [ 38%]
tests/test_paginator.py ......                                   [ 39%]
tests/test_repository_fixed.py ..                                [ 39%]
tests/test_salary_fixed.py ...........                           [ 40%]
tests/test_salary_utils.py ......................                [ 42%]
tests/test_search_utils.py ............................          [ 45%]
tests/test_services_consolidated.py ....                         [ 45%]
tests/test_services_storage_consolidated.py ..........           [ 46%]
tests/test_sj_api.py ..............                              [ 48%]
tests/test_sj_api_config.py .....                                [ 48%]
tests/test_sj_parser.py ........                                 [ 49%]
tests/test_source_manager.py .................                   [ 51%]
tests/test_source_selector.py .................                  [ 52%]
tests/test_storage_factory.py ........                           [ 53%]
tests/test_storage_modules_consolidated.py .F..                  [ 53%]
tests/test_target_companies.py .....                             [ 54%]
tests/test_typed_data_processor.py ................              [ 55%]
tests/test_ui_components_extended.py ..................          [ 57%]
tests/test_ui_config.py .......................                  [ 59%]
tests/test_ui_helpers_comprehensive.py ......................... [ 62%]
..............                                                   [ 63%]
tests/test_ui_helpers_extended.py .............................. [ 66%]
..........                                                       [ 67%]
tests/test_ui_modules_consolidated.py .....                      [ 67%]
tests/test_ui_navigation.py ......................               [ 69%]
tests/test_ui_navigation_complete.py ........................... [ 72%]
.....F...............                                            [ 74%]
tests/test_ui_navigation_comprehensive.py ......                 [ 75%]
tests/test_ui_navigation_extended.py .......FF.................. [ 77%]
........                                                         [ 78%]
tests/test_unified_api.py ................F...F.                 [ 80%]
tests/test_unified_api_fixed.py ...                              [ 80%]
tests/test_user_interface.py ...............                     [ 82%]
tests/test_user_interface_consolidated.py F.F                    [ 82%]
tests/test_user_interface_fixed.py ...                           [ 82%]
tests/test_utils_consolidated.py .....                           [ 83%]
tests/test_utils_ui_consolidated.py ......                       [ 83%]
tests/test_vacancy_display_handler.py F..................        [ 85%]
tests/test_vacancy_formatter.py ........                         [ 86%]
tests/test_vacancy_models_complete.py F...                       [ 86%]
tests/test_vacancy_models_consolidated.py ..F.                   [ 87%]
tests/test_vacancy_operations.py ......                          [ 87%]
tests/test_vacancy_operations_coordinator.py ................... [ 89%]
........                                                         [ 90%]
tests/test_vacancy_operations_coordinator_complete.py F......... [ 91%]
............                                                     [ 92%]
tests/test_vacancy_processing_coordinator.py .............       [ 93%]
tests/test_vacancy_repository.py F........                       [ 94%]
tests/test_vacancy_search_handler_complete.py EEEEEEEEEEEEEEEEEE [ 96%]
EEEEE                                                            [ 96%]
tests/test_vacancy_stats.py ............                         [ 97%]
tests/test_vacancy_stats_fixed.py .........                      [ 98%]
tests/test_vacancy_validator.py ............                     [100%]

================================ ERRORS ================================
_ ERROR at setup of TestHeadHunterAPI.test_get_vacancies_from_target_companies_empty _
file /home/runner/workspace/tests/test_hh_api.py, line 306
      @patch('src.api_modules.hh_api.logger')
      def test_get_vacancies_from_target_companies_empty(self, mock_target_companies, mock_logger, hh_api):
E       fixture 'mock_logger' not found
>       available fixtures: base_mock_api, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, cov, doctest_namespace, hh_api, mock_api_config, mock_connection, mock_db_config, mock_vacancy, mock_vacancy_data, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, safe_db_config, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/home/runner/workspace/tests/test_hh_api.py:306
_ ERROR at setup of TestVacancySearchHandlerComplete.test_search_handler_init _

self = <tests.test_vacancy_search_handler_complete.TestVacancySearchHandlerComplete object at 0x7f968a0878d0>

    def setup_method(self):
        """Настройка перед каждым тестом"""
        # Создаем моки для обязательных зависимостей
        mock_unified_api = Mock()
        mock_storage = Mock()
    
        # Настраиваем поведение моков
        mock_unified_api.get_vacancies.return_value = []
        mock_unified_api.get_available_sources.return_value = ["hh.ru", "superjob.ru"]
        mock_storage.get_vacancies.return_value = []
        mock_storage.save_vacancies.return_value = True
    
        # Если VacancySearchHandler доступен, создаем экземпляр
        if SEARCH_HANDLER_AVAILABLE:
            self.search_handler = VacancySearchHandler(mock_unified_api, mock_storage)
        else:
            self.search_handler = None # Устанавливаем None, если класс не импортирован
    
        self.sample_search_results = [
>           Vacancy(
            ^^^^^^^
                vacancy_id="1",
                title="Senior Python Developer",
                description="Опытный Python разработчик для работы над проектами",
                url="https://example.com/vacancy/1"
            ),
            Vacancy(
                vacancy_id="2",
                title="Python Backend Developer",
                description="Backend разработчик на Python/Django",
                url="https://example.com/vacancy/2"
            )
        ]
E       NameError: name 'Vacancy' is not defined

tests/test_vacancy_search_handler_complete.py:52: NameError
_ ERROR at setup of TestVacancySearchHandlerComplete.test_get_search_query _

self = <tests.test_vacancy_search_handler_complete.TestVacancySearchHandlerComplete object at 0x7f968a087f90>

    def setup_method(self):
        """Настройка перед каждым тестом"""
        # Создаем моки для обязательных зависимостей
        mock_unified_api = Mock()
        mock_storage = Mock()
    
        # Настраиваем поведение моков
        mock_unified_api.get_vacancies.return_value = []
        mock_unified_api.get_available_sources.return_value = ["hh.ru", "superjob.ru"]
        mock_storage.get_vacancies.return_value = []
        mock_storage.save_vacancies.return_value = True
    
        # Если VacancySearchHandler доступен, создаем экземпляр
        if SEARCH_HANDLER_AVAILABLE:
            self.search_handler = VacancySearchHandler(mock_unified_api, mock_storage)
        else:
            self.search_handler = None # Устанавливаем None, если класс не импортирован
    
        self.sample_search_results = [
>           Vacancy(