~/workspace$ pytest --tb=short
====================================== test session starts =======================================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.14.1
collected 917 items / 4 errors                                                                   

============================================= ERRORS =============================================
_________________ ERROR collecting tests/test_advanced_coverage_comprehensive.py _________________
.pythonlibs/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule
    mod = import_path(
.pythonlibs/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path
    importlib.import_module(module_name)
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:177: in exec_module
    source_stat, co = _rewrite_test(fn, self.config)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test
    tree = ast.parse(source, filename=strfn)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/ast.py:50: in parse
    return compile(source, filename, mode, flags,
E     File "/home/runner/workspace/tests/test_advanced_coverage_comprehensive.py", line 190
E       temp_file.write("TEST_VAR_SINGLE='single_quoted'\n')
E                       ^
E   SyntaxError: unterminated string literal (detected at line 190)
___________________ ERROR collecting tests/test_core_modules_comprehensive.py ____________________
.pythonlibs/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule
    mod = import_path(
.pythonlibs/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path
    importlib.import_module(module_name)
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:177: in exec_module
    source_stat, co = _rewrite_test(fn, self.config)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test
    tree = ast.parse(source, filename=strfn)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/ast.py:50: in parse
    return compile(source, filename, mode, flags,
E     File "/home/runner/workspace/tests/test_core_modules_comprehensive.py", line 633
E       ```"""
E       ^
E   SyntaxError: invalid syntax
_____________________ ERROR collecting tests/test_final_complete_coverage.py _____________________
.pythonlibs/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule
    mod = import_path(
.pythonlibs/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path
    importlib.import_module(module_name)
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:177: in exec_module
    source_stat, co = _rewrite_test(fn, self.config)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test
    tree = ast.parse(source, filename=strfn)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/ast.py:50: in parse
    return compile(source, filename, mode, flags,
E     File "/home/runner/workspace/tests/test_final_complete_coverage.py", line 1027
E       salary_obj = Salary({'from': 100000, 'to': 200000, 'currency': 'RUR'})
E       ^^^^^^^^^^
E   SyntaxError: expected 'except' or 'finally' block
_____________________ ERROR collecting tests/test_utilities_comprehensive.py _____________________
ImportError while importing test module '/home/runner/workspace/tests/test_utilities_comprehensive.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/test_utilities_comprehensive.py:24: in <module>
    from src.utils.ui_helpers import UIHelpers
E   ImportError: cannot import name 'UIHelpers' from 'src.utils.ui_helpers' (/home/runner/workspace/tests/../src/utils/ui_helpers.py)
==================================== short test summary info =====================================
ERROR tests/test_advanced_coverage_comprehensive.py
ERROR tests/test_core_modules_comprehensive.py
ERROR tests/test_final_complete_coverage.py
ERROR tests/test_utilities_comprehensive.py
!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================= 4 errors in 1.24s ========================================
~/workspace$ pytest --tb=short
====================================== test session starts =======================================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.14.1
collected 1125 items                                                                             

tests/test_abstract.py ........                                                            [  0%]
tests/test_abstract_db_manager.py ....                                                     [  1%]
tests/test_advanced_coverage_comprehensive.py ...........FFFFFFFFFFFFFFFFFFFF...FEEEEE.F.F [  4%]
FF.....F....FFFF....F                                                                      [  6%]
tests/test_api_config.py ....                                                              [  7%]
tests/test_api_modules.py .............................                                    [  9%]
tests/test_api_modules_comprehensive.py ..F.F..F...F.F..FFFF..FF.F..F                      [ 12%]
tests/test_app_config.py .....                                                             [ 12%]
tests/test_base_api.py ......                                                              [ 13%]
tests/test_base_formatter.py ..........                                                    [ 14%]
tests/test_base_parser.py ......                                                           [ 14%]
tests/test_cache.py .......                                                                [ 15%]
tests/test_cached_api.py ...........                                                       [ 16%]
tests/test_comprehensive_final.py ....................F..                                  [ 18%]
tests/test_config_modules_comprehensive.py FF.FFFFFF..FFFFFFF........................F.F.  [ 22%]
tests/test_console_interface.py ......                                                     [ 23%]
tests/test_core_modules_comprehensive.py FFFF..FF.FFFFFFFF......FFFFFFFF.F.FF..            [ 26%]
tests/test_data_normalizers_comprehensive.py ............................                  [ 28%]
tests/test_database_connection.py F..F....                                                 [ 29%]
tests/test_db_config.py .....                                                              [ 30%]
tests/test_db_manager.py .................                                                 [ 31%]
tests/test_decorators.py .......                                                           [ 32%]
tests/test_env_loader.py ................                                                  [ 33%]
tests/test_final_complete_coverage.py FFFFFFF...F....F.F...F..F.......F                    [ 36%]
tests/test_get_api.py ......                                                               [ 37%]
tests/test_hh_api.py .......                                                               [ 37%]
tests/test_hh_api_config.py .....                                                          [ 38%]
tests/test_hh_parser.py ........                                                           [ 38%]
tests/test_integration.py .............                                                    [ 40%]
tests/test_main_application_interface.py EEEEEEEEEEE                                       [ 40%]
tests/test_menu_manager.py ..........                                                      [ 41%]
tests/test_missing_components.py .........                                                 [ 42%]
tests/test_paginator.py ......                                                             [ 43%]
tests/test_salary_fixed.py ...........                                                     [ 44%]
tests/test_salary_utils.py ......................                                          [ 46%]
tests/test_search_utils.py ............................                                    [ 48%]
tests/test_sj_api.py ..............                                                        [ 49%]
tests/test_sj_api_config.py .....                                                          [ 50%]
tests/test_sj_parser.py ........                                                           [ 51%]
tests/test_source_manager.py .................                                             [ 52%]
tests/test_source_selector.py .................                                            [ 54%]
tests/test_storage_factory.py ........                                                     [ 54%]
tests/test_storage_modules_comprehensive.py ....FFFFFFF.F....F.F.FF.....F....FEEEE.......F [ 58%]
FF                                                                                         [ 59%]
tests/test_target_companies.py .....                                                       [ 59%]
tests/test_typed_data_processor.py EEEEEEEEEEEEEE                                          [ 60%]
tests/test_ui_config.py .......................                                            [ 62%]
tests/test_ui_interfaces_comprehensive.py FF.FF...F............................F...        [ 66%]
tests/test_ui_navigation.py ......................                                         [ 68%]
tests/test_unified_api.py .................                                                [ 69%]
tests/test_user_interface_complete.py .F.....F.........                                    [ 71%]
tests/test_user_interface_comprehensive.py ..F......F..FFFFFFFFFFFFFFFFFFF.F               [ 74%]
tests/test_utilities_comprehensive.py .F.FF......F........FF.....EEEEE...F..F...........EE [ 78%]
EEE................F                                                                       [ 80%]
tests/test_vacancy_display_handler.py EEEEEEEEEEEEEEEEEEE                                  [ 82%]
tests/test_vacancy_formatter.py ........                                                   [ 83%]
tests/test_vacancy_modules_comprehensive.py .............................F.....FF.F.FF.F.F [ 87%]
.FFF.FFF..                                                                                 [ 88%]
tests/test_vacancy_operations.py ......                                                    [ 88%]
tests/test_vacancy_operations_coordinator.py ...........................                   [ 91%]
tests/test_vacancy_operations_coordinator_complete.py EEEEEEEEEEEEEEEEEEEEEE               [ 92%]
tests/test_vacancy_processing_coordinator.py .............                                 [ 94%]
tests/test_vacancy_repository.py FFFFFFFFFF                                                [ 95%]
tests/test_vacancy_search_handler_complete.py EEEEEEEEEEEEEEEEEEEEEEE                      [ 97%]
tests/test_vacancy_stats.py ............                                                   [ 98%]
tests/test_vacancy_stats_fixed.py .........                                                [ 98%]
tests/test_vacancy_validator.py ..........F.                                               [100%]

============================================= ERRORS =============================================
___________ ERROR at setup of TestPaginatorComprehensive.test_paginator_initialization ___________
tests/test_advanced_coverage_comprehensive.py:572: in setup_method
    self.paginator = Paginator(page_size=10)
                     ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
______________ ERROR at setup of TestPaginatorComprehensive.test_paginator_get_page ______________
tests/test_advanced_coverage_comprehensive.py:572: in setup_method
    self.paginator = Paginator(page_size=10)
                     ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
__________ ERROR at setup of TestPaginatorComprehensive.test_paginator_get_total_pages ___________
tests/test_advanced_coverage_comprehensive.py:572: in setup_method
    self.paginator = Paginator(page_size=10)
                     ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
___________ ERROR at setup of TestPaginatorComprehensive.test_paginator_has_next_page ____________
tests/test_advanced_coverage_comprehensive.py:572: in setup_method
    self.paginator = Paginator(page_size=10)
                     ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
_________ ERROR at setup of TestPaginatorComprehensive.test_paginator_has_previous_page __________
tests/test_advanced_coverage_comprehensive.py:572: in setup_method
    self.paginator = Paginator(page_size=10)
                     ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
______ ERROR at setup of TestMainApplicationInterface.test_main_application_interface_init _______
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_____________ ERROR at setup of TestMainApplicationInterface.test_start_application ______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
______________ ERROR at setup of TestMainApplicationInterface.test_stop_application ______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
___________ ERROR at setup of TestMainApplicationInterface.test_initialize_components ____________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_______________ ERROR at setup of TestMainApplicationInterface.test_run_main_loop ________________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_____________ ERROR at setup of TestMainApplicationInterface.test_handle_user_input ______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_______________ ERROR at setup of TestMainApplicationInterface.test_show_main_menu _______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_____________ ERROR at setup of TestMainApplicationInterface.test_cleanup_resources ______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
______________ ERROR at setup of TestMainApplicationInterface.test_api_integration _______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
____________ ERROR at setup of TestMainApplicationInterface.test_storage_integration _____________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
_______________ ERROR at setup of TestMainApplicationInterface.test_error_handling _______________
tests/test_main_application_interface.py:41: in setup_method
    self.app_interface = TestMainApplicationInterface()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'provider', 'processor', and 'storage'
________ ERROR at setup of TestVacancyStorageService.test_storage_service_initialization _________
tests/test_storage_modules_comprehensive.py:477: in setup_method
    self.storage_service = VacancyStorageService(mock_storage)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delete_vacancy, get_storage_stats, get_vacancies
__________ ERROR at setup of TestVacancyStorageService.test_process_and_save_vacancies ___________
tests/test_storage_modules_comprehensive.py:477: in setup_method
    self.storage_service = VacancyStorageService(mock_storage)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delete_vacancy, get_storage_stats, get_vacancies
_________________ ERROR at setup of TestVacancyStorageService.test_apply_filters _________________
tests/test_storage_modules_comprehensive.py:477: in setup_method
    self.storage_service = VacancyStorageService(mock_storage)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delete_vacancy, get_storage_stats, get_vacancies
_____________ ERROR at setup of TestVacancyStorageService.test_deduplicate_vacancies _____________
tests/test_storage_modules_comprehensive.py:477: in setup_method
    self.storage_service = VacancyStorageService(mock_storage)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delete_vacancy, get_storage_stats, get_vacancies
____________ ERROR at setup of TestTypedDataProcessor.test_typed_data_processor_init _____________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
________________ ERROR at setup of TestTypedDataProcessor.test_process_data_dict _________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
________________ ERROR at setup of TestTypedDataProcessor.test_process_data_list _________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
____________ ERROR at setup of TestTypedDataProcessor.test_validate_types_valid_data _____________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
___________ ERROR at setup of TestTypedDataProcessor.test_validate_types_invalid_data ____________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
___________ ERROR at setup of TestTypedDataProcessor.test_convert_types_string_to_int ____________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
_________ ERROR at setup of TestTypedDataProcessor.test_convert_types_preserve_existing __________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
____________ ERROR at setup of TestTypedDataProcessor.test_process_nested_structures _____________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
________________ ERROR at setup of TestTypedDataProcessor.test_handle_none_values ________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
________________ ERROR at setup of TestTypedDataProcessor.test_process_empty_data ________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
______________ ERROR at setup of TestTypedDataProcessor.test_type_conversion_safety ______________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
_________________ ERROR at setup of TestTypedDataProcessor.test_batch_processing _________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
________________ ERROR at setup of TestTypedDataProcessor.test_schema_validation _________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
__________________ ERROR at setup of TestTypedDataProcessor.test_error_handling __________________
tests/test_typed_data_processor.py:36: in setup_method
    self.processor = TypedDataProcessor()
                     ^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_vacancies, validate_vacancy_data
_____________ ERROR at setup of TestBaseFormatter.test_base_formatter_initialization _____________
tests/test_utilities_comprehensive.py:380: in setup_method
    self.formatter = BaseFormatter()
                     ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseFormatter with abstract methods clean_html_tags, format_company_name, format_currency, format_date, format_employment_type, format_experience, format_number, format_salary, format_schedule, format_text, format_vacancy_info
______________________ ERROR at setup of TestBaseFormatter.test_format_text ______________________
tests/test_utilities_comprehensive.py:380: in setup_method
    self.formatter = BaseFormatter()
                     ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseFormatter with abstract methods clean_html_tags, format_company_name, format_currency, format_date, format_employment_type, format_experience, format_number, format_salary, format_schedule, format_text, format_vacancy_info
____________________ ERROR at setup of TestBaseFormatter.test_format_currency ____________________
tests/test_utilities_comprehensive.py:380: in setup_method
    self.formatter = BaseFormatter()
                     ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseFormatter with abstract methods clean_html_tags, format_company_name, format_currency, format_date, format_employment_type, format_experience, format_number, format_salary, format_schedule, format_text, format_vacancy_info
______________________ ERROR at setup of TestBaseFormatter.test_format_date ______________________
tests/test_utilities_comprehensive.py:380: in setup_method
    self.formatter = BaseFormatter()
                     ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseFormatter with abstract methods clean_html_tags, format_company_name, format_currency, format_date, format_employment_type, format_experience, format_number, format_salary, format_schedule, format_text, format_vacancy_info
_____________________ ERROR at setup of TestBaseFormatter.test_truncate_text _____________________
tests/test_utilities_comprehensive.py:380: in setup_method
    self.formatter = BaseFormatter()
                     ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseFormatter with abstract methods clean_html_tags, format_company_name, format_currency, format_date, format_employment_type, format_experience, format_number, format_salary, format_schedule, format_text, format_vacancy_info
_________________ ERROR at setup of TestPaginator.test_paginator_initialization __________________
tests/test_utilities_comprehensive.py:609: in setup_method
    self.paginated_data = self.paginator.paginate(self.items, page_size=10)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator.paginate() got an unexpected keyword argument 'page_size'
_________________________ ERROR at setup of TestPaginator.test_get_page __________________________
tests/test_utilities_comprehensive.py:609: in setup_method
    self.paginated_data = self.paginator.paginate(self.items, page_size=10)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator.paginate() got an unexpected keyword argument 'page_size'
______________________ ERROR at setup of TestPaginator.test_get_total_pages ______________________
tests/test_utilities_comprehensive.py:609: in setup_method
    self.paginated_data = self.paginator.paginate(self.items, page_size=10)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator.paginate() got an unexpected keyword argument 'page_size'
_______________________ ERROR at setup of TestPaginator.test_has_next_page _______________________
tests/test_utilities_comprehensive.py:609: in setup_method
    self.paginated_data = self.paginator.paginate(self.items, page_size=10)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator.paginate() got an unexpected keyword argument 'page_size'
_____________________ ERROR at setup of TestPaginator.test_has_previous_page _____________________
tests/test_utilities_comprehensive.py:609: in setup_method
    self.paginated_data = self.paginator.paginate(self.items, page_size=10)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator.paginate() got an unexpected keyword argument 'page_size'
_________ ERROR at setup of TestVacancyDisplayHandler.test_vacancy_display_handler_init __________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
____________ ERROR at setup of TestVacancyDisplayHandler.test_display_vacancies_list _____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
____________ ERROR at setup of TestVacancyDisplayHandler.test_display_vacancy_details ____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
______________ ERROR at setup of TestVacancyDisplayHandler.test_display_empty_list _______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
____________ ERROR at setup of TestVacancyDisplayHandler.test_display_vacancy_summary ____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
___________ ERROR at setup of TestVacancyDisplayHandler.test_display_formatted_salary ____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
______________ ERROR at setup of TestVacancyDisplayHandler.test_display_pagination _______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
_____________ ERROR at setup of TestVacancyDisplayHandler.test_format_vacancy_title ______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
______________ ERROR at setup of TestVacancyDisplayHandler.test_format_company_info ______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
__________ ERROR at setup of TestVacancyDisplayHandler.test_display_vacancy_statistics ___________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
_________ ERROR at setup of TestVacancyDisplayHandler.test_display_search_results_header _________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
_____________ ERROR at setup of TestVacancyDisplayHandler.test_truncate_description ______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
_____________ ERROR at setup of TestVacancyDisplayHandler.test_display_vacancy_table _____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
___________ ERROR at setup of TestVacancyDisplayHandler.test_select_vacancy_from_list ____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
__________ ERROR at setup of TestVacancyDisplayHandler.test_display_no_results_message ___________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
___________ ERROR at setup of TestVacancyDisplayHandler.test_sort_vacancies_by_salary ____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
____________ ERROR at setup of TestVacancyDisplayHandler.test_display_filter_options _____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
______________ ERROR at setup of TestVacancyDisplayHandler.test_highlight_keywords _______________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
____________ ERROR at setup of TestVacancyDisplayHandler.test_display_export_options _____________
tests/test_vacancy_display_handler.py:26: in setup_method
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
________ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_coordinator_init ________
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_search_and_display_vacancies __
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
____ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_save_selected_vacancies _____
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_select_vacancies_for_operation _
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_filter_vacancies_by_salary ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_filter_vacancies_by_company ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_________ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_sort_vacancies _________
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_delete_vacancies_operation ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
____ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_export_vacancies_to_file ____
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_import_vacancies_from_file ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_______ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_compare_vacancies ________
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_analyze_vacancy_trends _____
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_______ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_set_salary_filter ________
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_display_operation_menu _____
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_handle_user_operation_choice __
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_batch_operation_processing ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
______ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_undo_last_operation _______
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_______ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_operation_history ________
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_validate_operation_parameters __
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_operation_progress_tracking ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_error_handling_in_operations __
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__ ERROR at setup of TestVacancyOperationsCoordinatorComplete.test_operation_result_validation ___
tests/test_vacancy_operations_coordinator_complete.py:22: in setup_method
    self.coordinator = VacancyOperationsCoordinator()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyOperationsCoordinator.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_search_handler_init ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
____________ ERROR at setup of TestVacancySearchHandlerComplete.test_get_search_query ____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_select_search_source __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____________ ERROR at setup of TestVacancySearchHandlerComplete.test_execute_search _____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_set_salary_filter ____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_set_location_filter ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_set_company_filter ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
________ ERROR at setup of TestVacancySearchHandlerComplete.test_apply_filters_to_results ________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_sort_search_results ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____ ERROR at setup of TestVacancySearchHandlerComplete.test_display_search_results_summary _____
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_set_results_limit ____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_set_search_period ____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_________ ERROR at setup of TestVacancySearchHandlerComplete.test_validate_search_query __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_save_search_criteria __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_______ ERROR at setup of TestVacancySearchHandlerComplete.test_load_saved_search_criteria _______
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____________ ERROR at setup of TestVacancySearchHandlerComplete.test_search_history _____________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_repeat_last_search ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_________ ERROR at setup of TestVacancySearchHandlerComplete.test_export_search_results __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
________ ERROR at setup of TestVacancySearchHandlerComplete.test_advanced_search_options _________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
__________ ERROR at setup of TestVacancySearchHandlerComplete.test_complex_search_query __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
___________ ERROR at setup of TestVacancySearchHandlerComplete.test_search_suggestions ___________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_____ ERROR at setup of TestVacancySearchHandlerComplete.test_search_performance_monitoring ______
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
_________ ERROR at setup of TestVacancySearchHandlerComplete.test_search_error_handling __________
tests/test_vacancy_search_handler_complete.py:22: in setup_method
    self.search_handler = VacancySearchHandler()
                          ^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancySearchHandler.__init__() missing 2 required positional arguments: 'unified_api' and 'storage'
============================================ FAILURES ============================================
______________________ TestFileCacheComprehensive.test_cache_initialization ______________________
tests/test_advanced_coverage_comprehensive.py:321: in test_cache_initialization
    assert self.cache.cache_dir == self.temp_dir
E   AssertionError: assert PosixPath('/tmp/tmpxqypg2fv') == '/tmp/tmpxqypg2fv'
E    +  where PosixPath('/tmp/tmpxqypg2fv') = <src.utils.cache.FileCache object at 0x7f43839c0850>.cache_dir
E    +    where <src.utils.cache.FileCache object at 0x7f43839c0850> = <tests.test_advanced_coverage_comprehensive.TestFileCacheComprehensive object at 0x7f4383ec84d0>.cache
E    +  and   '/tmp/tmpxqypg2fv' = <tests.test_advanced_coverage_comprehensive.TestFileCacheComprehensive object at 0x7f4383ec84d0>.temp_dir
______________________ TestFileCacheComprehensive.test_cache_set_get_string ______________________
tests/test_advanced_coverage_comprehensive.py:331: in test_cache_set_get_string
    self.cache.set("test_key", "test_value")
    ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
_______________________ TestFileCacheComprehensive.test_cache_set_get_dict _______________________
tests/test_advanced_coverage_comprehensive.py:345: in test_cache_set_get_dict
    self.cache.set("test_dict", test_data)
    ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
_____________________ TestFileCacheComprehensive.test_cache_get_nonexistent ______________________
tests/test_advanced_coverage_comprehensive.py:355: in test_cache_get_nonexistent
    result = self.cache.get("nonexistent_key")
             ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'get'
_____________________ TestFileCacheComprehensive.test_cache_get_with_default _____________________
tests/test_advanced_coverage_comprehensive.py:363: in test_cache_get_with_default
    result = self.cache.get("nonexistent_key", "default_value")
             ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'get'
_______________________ TestFileCacheComprehensive.test_cache_has_existing _______________________
tests/test_advanced_coverage_comprehensive.py:373: in test_cache_has_existing
    self.cache.set("existing_key", "value")
    ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
_____________________ TestFileCacheComprehensive.test_cache_delete_existing ______________________
tests/test_advanced_coverage_comprehensive.py:385: in test_cache_delete_existing
    self.cache.set("to_delete", "value")
    ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
____________________ TestFileCacheComprehensive.test_cache_delete_nonexistent ____________________
tests/test_advanced_coverage_comprehensive.py:393: in test_cache_delete_nonexistent
    self.cache.delete("nonexistent_key")
    ^^^^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'delete'
__________________________ TestFileCacheComprehensive.test_cache_clear ___________________________
tests/test_advanced_coverage_comprehensive.py:406: in test_cache_clear
    self.cache.set("key1", "value1")
    ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
_________________ TestFileCacheComprehensive.test_cache_file_corruption_handling _________________
tests/test_advanced_coverage_comprehensive.py:425: in test_cache_file_corruption_handling
    result = self.cache.get("corrupted_key")
             ^^^^^^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'get'
____________________ TestSalaryComprehensive.test_salary_initialization_full _____________________
tests/test_advanced_coverage_comprehensive.py:434: in test_salary_initialization_full
    salary = Salary(100000, 200000, "RUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
___________________ TestSalaryComprehensive.test_salary_initialization_partial ___________________
tests/test_advanced_coverage_comprehensive.py:442: in test_salary_initialization_partial
    salary = Salary(150000, None, "USD")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
___________________ TestSalaryComprehensive.test_salary_initialization_minimal ___________________
tests/test_advanced_coverage_comprehensive.py:450: in test_salary_initialization_minimal
    salary = Salary(None, 250000, "EUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
________________________ TestSalaryComprehensive.test_salary_get_average _________________________
tests/test_advanced_coverage_comprehensive.py:458: in test_salary_get_average
    salary = Salary(100000, 200000, "RUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
____________________ TestSalaryComprehensive.test_salary_get_average_partial _____________________
tests/test_advanced_coverage_comprehensive.py:463: in test_salary_get_average_partial
    salary_from_only = Salary(100000, None, "RUR")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
________________________ TestSalaryComprehensive.test_salary_is_specified ________________________
tests/test_advanced_coverage_comprehensive.py:474: in test_salary_is_specified
    salary_full = Salary(100000, 200000, "RUR")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
_____________________ TestSalaryComprehensive.test_salary_str_representation _____________________
tests/test_advanced_coverage_comprehensive.py:488: in test_salary_str_representation
    salary_full = Salary(100000, 200000, "RUR")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
_________________________ TestSalaryComprehensive.test_salary_comparison _________________________
tests/test_advanced_coverage_comprehensive.py:505: in test_salary_comparison
    salary1 = Salary(100000, 200000, "RUR")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
__________________________ TestSalaryComprehensive.test_salary_to_dict ___________________________
tests/test_advanced_coverage_comprehensive.py:514: in test_salary_to_dict
    salary = Salary(100000, 200000, "RUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
_________________________ TestSalaryComprehensive.test_salary_from_dict __________________________
tests/test_advanced_coverage_comprehensive.py:524: in test_salary_from_dict
    salary = Salary.from_dict(data)
             ^^^^^^^^^^^^^^^^
E   AttributeError: type object 'Salary' has no attribute 'from_dict'
_____________________ TestMenuManagerComprehensive.test_menu_manager_display _____________________
tests/test_advanced_coverage_comprehensive.py:561: in test_menu_manager_display
    self.menu_manager.display_menu(options)
E   TypeError: MenuManager.display_menu() takes 1 positional argument but 2 were given
__________________ TestVacancyParsersComprehensive.test_hh_parser_parse_vacancy __________________
tests/test_advanced_coverage_comprehensive.py:652: in test_hh_parser_parse_vacancy
    assert vacancy.get_title() == "Python Developer"
           ^^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'get_title'
__________________ TestVacancyParsersComprehensive.test_sj_parser_parse_vacancy __________________
tests/test_advanced_coverage_comprehensive.py:682: in test_sj_parser_parse_vacancy
    assert vacancy.get_title() == "Java Developer"
           ^^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'get_title'
________________ TestVacancyParsersComprehensive.test_parser_handle_missing_data _________________
tests/test_advanced_coverage_comprehensive.py:698: in test_parser_handle_missing_data
    assert vacancy.get_title() == "Test Position"
           ^^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'get_title'
________________ TestVacancyParsersComprehensive.test_parser_handle_invalid_data _________________
tests/test_advanced_coverage_comprehensive.py:706: in test_parser_handle_invalid_data
    assert result is None or (hasattr(result, 'is_valid') and not result.is_valid())
E   AssertionError: assert ({'area': '', 'employer': '', 'employment': '', 'experience': '', ...} is None or (False))
E    +  where False = hasattr({'area': '', 'employer': '', 'employment': '', 'experience': '', ...}, 'is_valid')
____________________ TestDecoratorsComprehensive.test_simple_cache_decorator _____________________
tests/test_advanced_coverage_comprehensive.py:782: in test_simple_cache_decorator
    assert result1 == 10
E   assert <function simple_cache.<locals>.decorator.<locals>.wrapper at 0x7f4383a12c00> == 10
_______________ TestCompleteModuleCoverage.test_storage_modules_complete_coverage ________________
tests/test_advanced_coverage_comprehensive.py:980: in test_storage_modules_complete_coverage
    assert result is True
E   assert False is True
__________________ TestCompleteModuleCoverage.test_ui_modules_complete_coverage __________________
tests/test_advanced_coverage_comprehensive.py:1015: in test_ui_modules_complete_coverage
    choice = source_selector.get_user_choice()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SourceSelector' object has no attribute 'get_user_choice'
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_______________ TestCompleteModuleCoverage.test_utility_modules_complete_coverage ________________
tests/test_advanced_coverage_comprehensive.py:1043: in test_utility_modules_complete_coverage
    assert test_var == 'default'
E   AssertionError: assert 'test_value' == 'default'
E     
E     - default
E     + test_value
________________ TestCompleteModuleCoverage.test_vacancy_models_complete_coverage ________________
tests/test_advanced_coverage_comprehensive.py:1083: in test_vacancy_models_complete_coverage
    salary_full = Salary(80000, 120000, 'RUR')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
___________ TestCompleteModuleCoverage.test_performance_and_caching_complete_coverage ____________
tests/test_advanced_coverage_comprehensive.py:1288: in test_performance_and_caching_complete_coverage
    assert result1 == 'result_test'
E   AssertionError: assert <function simple_cache.<locals>.decorator.<locals>.wrapper at 0x7f4383a11620> == 'result_test'
_____________________ TestHeadHunterAPI.test_hh_api_search_vacancies_success _____________________
tests/test_api_modules_comprehensive.py:102: in test_hh_api_search_vacancies_success
    assert len(result) == 1
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.api_modules.hh_api:hh_api.py:179 Ошибка получения вакансий: 'Mock' object does not support item assignment
_______________________ TestHeadHunterAPI.test_hh_api_get_vacancy_details ________________________
tests/test_api_modules_comprehensive.py:143: in test_hh_api_get_vacancy_details
    result = self.hh_api.get_vacancy_details("123")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HeadHunterAPI' object has no attribute 'get_vacancy_details'
______________________ TestSuperJobAPI.test_sj_api_search_vacancies_success ______________________
tests/test_api_modules_comprehensive.py:207: in test_sj_api_search_vacancies_success
    assert len(result) == 1
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.cached_api:cached_api.py:115 Ошибка кэша памяти: Object of type Mock is not JSON serializable. Переключаемся на файловый кэш
ERROR    src.api_modules.sj_api:sj_api.py:198 Failed to get vacancies: cannot access local variable 'filepath' where it is not associated with a value
_______________________ TestCachedAPI.test_cached_api_search_with_caching ________________________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:900: in assert_not_called
    raise AssertionError(msg)
E   AssertionError: Expected 'get_vacancies' to not have been called. Called 1 times.
E   Calls: [call('Python')].

During handling of the above exception, another exception occurred:
tests/test_api_modules_comprehensive.py:275: in test_cached_api_search_with_caching
    self.mock_base_api.get_vacancies.assert_not_called()
E   AssertionError: Expected 'get_vacancies' to not have been called. Called 1 times.
E   Calls: [call('Python')].
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ('Python',) == ()
E     
E     Left contains one more item: 'Python'
E     Use -v to get more diff
___________________________ TestCachedAPI.test_cached_api_clear_cache ____________________________
tests/test_api_modules_comprehensive.py:291: in test_cached_api_clear_cache
    self.cached_api.clear_cache()
E   TypeError: CachedAPI.clear_cache() missing 1 required positional argument: 'api_prefix'
_______________________ TestUnifiedAPI.test_unified_api_search_all_sources _______________________
tests/test_api_modules_comprehensive.py:338: in test_unified_api_search_all_sources
    result = self.unified_api.get_vacancies("Python")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_____________________ TestUnifiedAPI.test_unified_api_search_specific_source _____________________
tests/test_api_modules_comprehensive.py:349: in test_unified_api_search_specific_source
    result = self.unified_api.search_vacancies("Python", sources=["hh.ru"])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'UnifiedAPI' object has no attribute 'search_vacancies'
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_____________________ TestUnifiedAPI.test_unified_api_get_available_sources ______________________
tests/test_api_modules_comprehensive.py:361: in test_unified_api_get_available_sources
    assert "hh.ru" in sources or "superjob.ru" in sources
E   AssertionError: assert ('hh.ru' in ['hh', 'sj'] or 'superjob.ru' in ['hh', 'sj'])
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_________________________ TestUnifiedAPI.test_unified_api_error_handling _________________________
tests/test_api_modules_comprehensive.py:369: in test_unified_api_error_handling
    result = self.unified_api.get_vacancies("Python")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
__________________________ TestAPIConnector.test_api_connector_connect ___________________________
src/api_modules/get_api.py:108: in __connect
    params={k: v for k, v in params.items() if v is not None},
                             ^^^^^^^^^^^^
E   AttributeError: 'NoneType' object has no attribute 'items'

During handling of the above exception, another exception occurred:
tests/test_api_modules_comprehensive.py:405: in test_api_connector_connect
    result = api_connector.connect("https://test.api")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/api_modules/get_api.py:153: in connect
    return self._APIConnector__connect(url, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/api_modules/get_api.py:138: in __connect
    raise ConnectionError(f"Unexpected error: {str(e)}")
E   ConnectionError: Unexpected error: 'NoneType' object has no attribute 'items'
_______________________ TestAPIConnector.test_api_connector_error_handling _______________________
tests/test_api_modules_comprehensive.py:412: in test_api_connector_error_handling
    mock_get.side_effect = requests.exceptions.ConnectionError("Network error")
                           ^^^^^^^^
E   NameError: name 'requests' is not defined
________________________ TestAPIConnector.test_api_connector_with_params _________________________
.pythonlibs/lib/python3.11/site-packages/urllib3/connection.py:198: in _new_conn
    sock = connection.create_connection(
.pythonlibs/lib/python3.11/site-packages/urllib3/util/connection.py:60: in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/socket.py:974: in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   socket.gaierror: [Errno -2] Name or service not known

The above exception was the direct cause of the following exception:
.pythonlibs/lib/python3.11/site-packages/urllib3/connectionpool.py:787: in urlopen
    response = self._make_request(
.pythonlibs/lib/python3.11/site-packages/urllib3/connectionpool.py:488: in _make_request
    raise new_e
.pythonlibs/lib/python3.11/site-packages/urllib3/connectionpool.py:464: in _make_request
    self._validate_conn(conn)
.pythonlibs/lib/python3.11/site-packages/urllib3/connectionpool.py:1093: in _validate_conn
    conn.connect()
.pythonlibs/lib/python3.11/site-packages/urllib3/connection.py:753: in connect
    self.sock = sock = self._new_conn()
                       ^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/urllib3/connection.py:205: in _new_conn
    raise NameResolutionError(self.host, self, e) from e
E   urllib3.exceptions.NameResolutionError: <urllib3.connection.HTTPSConnection object at 0x7f4383a96cd0>: Failed to resolve 'test.api' ([Errno -2] Name or service not known)

The above exception was the direct cause of the following exception:
.pythonlibs/lib/python3.11/site-packages/requests/adapters.py:644: in send
    resp = conn.urlopen(
.pythonlibs/lib/python3.11/site-packages/urllib3/connectionpool.py:841: in urlopen
    retries = retries.increment(
.pythonlibs/lib/python3.11/site-packages/urllib3/util/retry.py:519: in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='test.api', port=443): Max retries exceeded with url: /?query=Python&page=1 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7f4383a96cd0>: Failed to resolve 'test.api' ([Errno -2] Name or service not known)"))

During handling of the above exception, another exception occurred:
src/api_modules/get_api.py:106: in __connect
    response = requests.get(
.pythonlibs/lib/python3.11/site-packages/requests/api.py:73: in get
    return request("get", url, params=params, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/requests/api.py:59: in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/requests/sessions.py:589: in request
    resp = self.send(prep, **send_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/requests/sessions.py:703: in send
    r = adapter.send(request, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.pythonlibs/lib/python3.11/site-packages/requests/adapters.py:677: in send
    raise ConnectionError(e, request=request)
E   requests.exceptions.ConnectionError: HTTPSConnectionPool(host='test.api', port=443): Max retries exceeded with url: /?query=Python&page=1 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7f4383a96cd0>: Failed to resolve 'test.api' ([Errno -2] Name or service not known)"))

During handling of the above exception, another exception occurred:
tests/test_api_modules_comprehensive.py:433: in test_api_connector_with_params
    result = api_connector.connect("https://test.api", params=params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/api_modules/get_api.py:153: in connect
    return self._APIConnector__connect(url, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/api_modules/get_api.py:134: in __connect
    raise ConnectionError(f"Connection error: {str(e)}")
E   ConnectionError: Connection error: HTTPSConnectionPool(host='test.api', port=443): Max retries exceeded with url: /?query=Python&page=1 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7f4383a96cd0>: Failed to resolve 'test.api' ([Errno -2] Name or service not known)"))
__________________________ TestAPIIntegration.test_full_search_workflow __________________________
tests/test_api_modules_comprehensive.py:554: in test_full_search_workflow
    result = unified_api.get_vacancies("Python")
             ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_________________ TestSpecialModules.test_vacancy_storage_service_full_coverage __________________
tests/test_comprehensive_final.py:770: in test_vacancy_storage_service_full_coverage
    storage = VacancyStorageService()
              ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delete_vacancy, get_storage_stats, get_vacancies
__________________________ TestAPIConfig.test_api_config_initialization __________________________
tests/test_config_modules_comprehensive.py:34: in test_api_config_initialization
    assert hasattr(config, 'get_base_url')
E   AssertionError: assert False
E    +  where False = hasattr(<src.config.api_config.APIConfig object at 0x7f43839b4910>, 'get_base_url')
_________________________ TestAPIConfig.test_api_config_abstract_methods _________________________
tests/test_config_modules_comprehensive.py:43: in test_api_config_abstract_methods
    base_url = config.get_base_url()
               ^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'APIConfig' object has no attribute 'get_base_url'
______________________________ TestHHAPIConfig.test_hh_config_urls _______________________________
tests/test_config_modules_comprehensive.py:67: in test_hh_config_urls
    base_url = self.config.get_base_url()
               ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'get_base_url'
_____________________________ TestHHAPIConfig.test_hh_config_headers _____________________________
tests/test_config_modules_comprehensive.py:81: in test_hh_config_headers
    headers = self.config.get_headers()
              ^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'get_headers'
_______________________ TestHHAPIConfig.test_hh_config_default_parameters ________________________
tests/test_config_modules_comprehensive.py:90: in test_hh_config_default_parameters
    params = self.config.get_default_parameters()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'get_default_parameters'
______________________ TestHHAPIConfig.test_hh_config_salary_filter_enabled ______________________
tests/test_config_modules_comprehensive.py:102: in test_hh_config_salary_filter_enabled
    should_filter = config.should_filter_by_salary()
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
_____________________ TestHHAPIConfig.test_hh_config_salary_filter_disabled ______________________
tests/test_config_modules_comprehensive.py:109: in test_hh_config_salary_filter_disabled
    should_filter = config.should_filter_by_salary()
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
______________________ TestHHAPIConfig.test_hh_config_salary_filter_default ______________________
tests/test_config_modules_comprehensive.py:116: in test_hh_config_salary_filter_default
    should_filter = config.should_filter_by_salary()
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
______________________________ TestSJAPIConfig.test_sj_config_urls _______________________________
tests/test_config_modules_comprehensive.py:144: in test_sj_config_urls
    base_url = self.config.get_base_url()
               ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'get_base_url'
_____________________________ TestSJAPIConfig.test_sj_config_headers _____________________________
tests/test_config_modules_comprehensive.py:154: in test_sj_config_headers
    headers = self.config.get_headers()
              ^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
__________________________ TestSJAPIConfig.test_sj_config_with_api_key ___________________________
tests/test_config_modules_comprehensive.py:165: in test_sj_config_with_api_key
    headers = config.get_headers()
              ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
_________________________ TestSJAPIConfig.test_sj_config_without_api_key _________________________
tests/test_config_modules_comprehensive.py:174: in test_sj_config_without_api_key
    headers = config.get_headers()
              ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
___________________________ TestSJAPIConfig.test_sj_config_parameters ____________________________
tests/test_config_modules_comprehensive.py:181: in test_sj_config_parameters
    params = self.config.get_default_parameters()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'get_default_parameters'
__________________________ TestSJAPIConfig.test_sj_config_salary_filter __________________________
tests/test_config_modules_comprehensive.py:193: in test_sj_config_salary_filter
    should_filter = config.should_filter_by_salary()
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SJAPIConfig' object has no attribute 'should_filter_by_salary'
________________________ TestDatabaseConfig.test_db_config_initialization ________________________
tests/test_config_modules_comprehensive.py:209: in test_db_config_initialization
    assert self.config.default_storage_type in ["postgresql", "json", "memory", "postgres"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'DatabaseConfig' object has no attribute 'default_storage_type'
________________________ TestTargetCompanies.test_company_ids_extraction _________________________
tests/test_config_modules_comprehensive.py:504: in test_company_ids_extraction
    assert isinstance(all_ids, list)
E   AssertionError: assert False
E    +  where False = isinstance({'1057', '1122', '1145', '1165', '12258', '1237', ...}, list)
__________________ TestConfigIntegration.test_environment_variables_propagation __________________
tests/test_config_modules_comprehensive.py:561: in test_environment_variables_propagation
    assert hh_config.should_filter_by_salary() is True
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
_______________________ TestUserInterfaceModule.test_main_function_success _______________________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'DBManager'
_________________ TestUserInterfaceModule.test_main_function_db_connection_error _________________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'DBManager'
_______________ TestUserInterfaceModule.test_main_function_db_initialization_error _______________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'DBManager'
_________________ TestUserInterfaceModule.test_main_function_keyboard_interrupt __________________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'DBManager'
____________________ TestDBManagerComprehensive.test_get_connection_fallback _____________________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: in patched
    with self.decoration_helper(patched,
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.storage.db_manager' from '/home/runner/workspace/tests/../src/storage/db_manager.py'> does not have the attribute 'get_db_adapter'
____________________ TestDBManagerComprehensive.test_check_connection_success ____________________
tests/test_core_modules_comprehensive.py:230: in test_check_connection_success
    assert result is True
E   assert False is True
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:790 Ошибка подключения к БД: 'Mock' object does not support the context manager protocol
_____________________ TestDBManagerComprehensive.test_create_tables_success ______________________
tests/test_core_modules_comprehensive.py:251: in test_create_tables_success
    self.db_manager.create_tables()
src/storage/db_manager.py:82: in create_tables
    with self._get_connection() as conn:
E   TypeError: 'Mock' object does not support the context manager protocol
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:212 Ошибка при создании таблиц: 'Mock' object does not support the context manager protocol
______________________ TestDBManagerComprehensive.test_add_company_success _______________________
tests/test_core_modules_comprehensive.py:266: in test_add_company_success
    result = self.db_manager.add_company("Test Company", "123")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'DBManager' object has no attribute 'add_company'
_____________________ TestDBManagerComprehensive.test_add_company_duplicate ______________________
tests/test_core_modules_comprehensive.py:282: in test_add_company_duplicate
    result = self.db_manager.add_company("Test Company", "123")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'DBManager' object has no attribute 'add_company'
______________________ TestDBManagerComprehensive.test_add_vacancy_success _______________________
tests/test_core_modules_comprehensive.py:305: in test_add_vacancy_success
    result = self.db_manager.add_vacancy(vacancy_data)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'DBManager' object has no attribute 'add_vacancy'
_______________ TestDBManagerComprehensive.test_get_companies_and_vacancies_count ________________
tests/test_core_modules_comprehensive.py:325: in test_get_companies_and_vacancies_count
    assert len(result) == 2
E   AssertionError: assert 12 == 2
E    +  where 12 = len([('Яндекс', 0), ('Тинькофф', 0), ('СБЕР', 0), ('Wildberries', 0), ('OZON', 0), ('VK', 0), ...])
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:790 Ошибка подключения к БД: 'Mock' object does not support the context manager protocol
WARNING  src.storage.db_manager:db_manager.py:308 Нет подключения к базе данных
_________________________ TestDBManagerComprehensive.test_get_avg_salary _________________________
tests/test_core_modules_comprehensive.py:340: in test_get_avg_salary
    assert result == 150000.0
E   assert None == 150000.0
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:212 Ошибка при создании таблиц: 'Mock' object does not support the context manager protocol
WARNING  src.storage.db_manager:db_manager.py:399 Не удалось создать таблицы: 'Mock' object does not support the context manager protocol
________________ TestDBManagerComprehensive.test_get_vacancies_with_higher_salary ________________
tests/test_core_modules_comprehensive.py:361: in test_get_vacancies_with_higher_salary
    assert len(result) == 1
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:212 Ошибка при создании таблиц: 'Mock' object does not support the context manager protocol
WARNING  src.storage.db_manager:db_manager.py:399 Не удалось создать таблицы: 'Mock' object does not support the context manager protocol
___________________ TestDBManagerComprehensive.test_get_vacancies_with_keyword ___________________
tests/test_core_modules_comprehensive.py:381: in test_get_vacancies_with_keyword
    assert len(result) == 1
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
ERROR    src.storage.db_manager:db_manager.py:212 Ошибка при создании таблиц: 'Mock' object does not support the context manager protocol
WARNING  src.storage.db_manager:db_manager.py:399 Не удалось создать таблицы: 'Mock' object does not support the context manager protocol
___________________________ TestVacancyModels.test_vacancy_with_salary ___________________________
tests/test_core_modules_comprehensive.py:455: in test_vacancy_with_salary
    salary = Salary(100000, 200000, "RUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
________________________ TestVacancyModels.test_vacancy_validation_valid _________________________
tests/test_core_modules_comprehensive.py:477: in test_vacancy_validation_valid
    assert vacancy.is_valid() is True
           ^^^^^^^^^^^^^^^^
E   AttributeError: 'Vacancy' object has no attribute 'is_valid'
____________________ TestVacancyModels.test_vacancy_validation_invalid_title _____________________
tests/test_core_modules_comprehensive.py:488: in test_vacancy_validation_invalid_title
    assert vacancy.is_valid() is False
           ^^^^^^^^^^^^^^^^
E   AttributeError: 'Vacancy' object has no attribute 'is_valid'
_____________________ TestVacancyModels.test_vacancy_validation_invalid_url ______________________
tests/test_core_modules_comprehensive.py:499: in test_vacancy_validation_invalid_url
    assert vacancy.is_valid() is False
           ^^^^^^^^^^^^^^^^
E   AttributeError: 'Vacancy' object has no attribute 'is_valid'
_____________________________ TestVacancyModels.test_vacancy_to_dict _____________________________
tests/test_core_modules_comprehensive.py:504: in test_vacancy_to_dict
    salary = Salary(100000, 200000, "RUR")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
____________________________ TestVacancyModels.test_vacancy_from_dict ____________________________
tests/test_core_modules_comprehensive.py:539: in test_vacancy_from_dict
    assert vacancy.requirements == "Python, FastAPI"
E   AssertionError: assert 'Python, Fast...d development' == 'Python, FastAPI'
E     
E     - Python, FastAPI
E     + Python, FastAPI Обязанности: Backend development
___________________________ TestVacancyModels.test_vacancy_comparison ____________________________
tests/test_core_modules_comprehensive.py:550: in test_vacancy_comparison
    assert vacancy1 == vacancy3  # Одинаковые вакансии
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert <src.vacancies.models.Vacancy object at 0x7f438407c7a0> == <src.vacancies.models.Vacancy object at 0x7f438407ef70>
____________________________ TestVacancyModels.test_vacancy_str_repr _____________________________
tests/test_core_modules_comprehensive.py:564: in test_vacancy_str_repr
    assert "Python Developer" in repr_repr
E   AssertionError: assert 'Python Developer' in '<src.vacancies.models.Vacancy object at 0x7f4382ad4ef0>'
___________________ TestAppConfigComprehensive.test_app_config_default_values ____________________
tests/test_core_modules_comprehensive.py:582: in test_app_config_default_values
    assert config.default_storage_type in ["postgresql", "json", "memory"]
E   AssertionError: assert 'postgres' in ['postgresql', 'json', 'memory']
E    +  where 'postgres' = <src.config.app_config.AppConfig object at 0x7f438417c050>.default_storage_type
________________ TestStorageFactoryComprehensive.test_storage_factory_postgresql _________________
tests/test_core_modules_comprehensive.py:602: in test_storage_factory_postgresql
    storage = StorageFactory.create_storage("postgresql")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/storage/storage_factory.py:20: in create_storage
    raise ValueError(f"Поддерживается только PostgreSQL хранилище, получен: {storage_type}")
E   ValueError: Поддерживается только PostgreSQL хранилище, получен: postgresql
___________________ TestStorageFactoryComprehensive.test_storage_factory_json ____________________
tests/test_core_modules_comprehensive.py:609: in test_storage_factory_json
    storage = StorageFactory.create_storage("json")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/storage/storage_factory.py:20: in create_storage
    raise ValueError(f"Поддерживается только PostgreSQL хранилище, получен: {storage_type}")
E   ValueError: Поддерживается только PostgreSQL хранилище, получен: json
______________________ TestDatabaseConnection.test_database_connection_init ______________________
tests/test_database_connection.py:38: in test_database_connection_init
    assert hasattr(db_conn, 'config')
E   AssertionError: assert False
E    +  where False = hasattr(<src.storage.components.database_connection.DatabaseConnection object at 0x7f43824403d0>, 'config')
__________________________ TestDatabaseConnection.test_close_connection __________________________
tests/test_database_connection.py:70: in test_close_connection
    db_conn.close_connection(connection)
E   TypeError: DatabaseConnection.close_connection() takes 1 positional argument but 2 were given
_______________ TestCompleteAPIModuleCoverage.test_base_job_api_complete_coverage ________________
tests/test_final_complete_coverage.py:164: in test_base_job_api_complete_coverage
    api = TestAPI()
          ^^^^^^^^^
E   TypeError: Can't instantiate abstract class TestAPI with abstract methods _validate_vacancy, get_vacancies
______________ TestCompleteAPIModuleCoverage.test_headhunter_api_complete_coverage _______________
tests/test_final_complete_coverage.py:199: in test_headhunter_api_complete_coverage
    result = api.search_vacancies('python developer')
             ^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'
_______________ TestCompleteAPIModuleCoverage.test_superjob_api_complete_coverage ________________
tests/test_final_complete_coverage.py:254: in test_superjob_api_complete_coverage
    result = api.search_vacancies('java developer')
             ^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
________________ TestCompleteAPIModuleCoverage.test_cached_api_complete_coverage _________________
tests/test_final_complete_coverage.py:298: in test_cached_api_complete_coverage
    api = TestCachedAPI()
          ^^^^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class TestCachedAPI with abstract methods _get_empty_response, _validate_vacancy, get_vacancies, get_vacancies_page
________________ TestCompleteAPIModuleCoverage.test_unified_api_complete_coverage ________________
tests/test_final_complete_coverage.py:345: in test_unified_api_complete_coverage
    api.clear_cache()
E   TypeError: UnifiedAPI.clear_cache() missing 1 required positional argument: 'sources'
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
______________ TestCompleteStorageModuleCoverage.test_db_manager_complete_coverage _______________
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:908: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'execute' to have been called.

During handling of the above exception, another exception occurred:
tests/test_final_complete_coverage.py:394: in test_db_manager_complete_coverage
    self.mocks['cursor'].execute.assert_called()
E   AssertionError: Expected 'execute' to have been called.
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927954521360'>, исправляем...
____________ TestCompleteStorageModuleCoverage.test_storage_factory_complete_coverage ____________
tests/test_final_complete_coverage.py:441: in test_storage_factory_complete_coverage
    pg_storage = StorageFactory.create_storage('postgresql')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/storage/storage_factory.py:20: in create_storage
    raise ValueError(f"Поддерживается только PostgreSQL хранилище, получен: {storage_type}")
E   ValueError: Поддерживается только PostgreSQL хранилище, получен: postgresql
______________ TestCompleteUIModuleCoverage.test_source_selector_complete_coverage _______________
tests/test_final_complete_coverage.py:658: in test_source_selector_complete_coverage
    assert len(choices) > 0
E   assert 0 > 0
E    +  where 0 = len([])
______________ TestCompleteUtilityModuleCoverage.test_file_cache_complete_coverage _______________
tests/test_final_complete_coverage.py:930: in test_file_cache_complete_coverage
    cache.set('string_key', 'test_string')
    ^^^^^^^^^
E   AttributeError: 'FileCache' object has no attribute 'set'
___________ TestCompleteUtilityModuleCoverage.test_vacancy_formatter_complete_coverage ___________
tests/test_final_complete_coverage.py:1031: in test_vacancy_formatter_complete_coverage
    partial_salary = formatter.format_salary(150000, None, 'USD') if hasattr(formatter, 'format_salary') else 'от 150,000 USD'
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyFormatter.format_salary() takes 2 positional arguments but 4 were given
______________ TestCompleteVacancyModelCoverage.test_salary_model_complete_coverage ______________
tests/test_final_complete_coverage.py:1273: in test_salary_model_complete_coverage
    from src.vacancies.models.salary import Salary
E   ModuleNotFoundError: No module named 'src.vacancies.models.salary'; 'src.vacancies.models' is not a package

During handling of the above exception, another exception occurred:
tests/test_final_complete_coverage.py:1322: in test_salary_model_complete_coverage
    full_salary = Salary(120000, 180000, 'RUR')
                  ^^^^^^
E   UnboundLocalError: cannot access local variable 'Salary' where it is not associated with a value
______________ TestCompleteConfigurationCoverage.test_app_config_complete_coverage _______________
tests/test_final_complete_coverage.py:1467: in test_app_config_complete_coverage
    assert storage_type in ['postgresql', 'json', 'memory']
E   AssertionError: assert 'postgres' in ['postgresql', 'json', 'memory']
_____________________ TestOverallSystemCoverage.test_security_and_validation _____________________
tests/test_final_complete_coverage.py:1891: in test_security_and_validation
    assert sanitized_input != dangerous_input or len(dangerous_input) == 0
E   AssertionError: assert ('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' != 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' or 10000 == 0)
E    +  where 10000 = len('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
__________________________ TestDBManager.test_db_manager_initialization __________________________
tests/test_storage_modules_comprehensive.py:106: in test_db_manager_initialization
    assert hasattr(self.db_manager, 'config')
E   AssertionError: assert False
E    +  where False = hasattr(<src.storage.db_manager.DBManager object at 0x7f4383575f10>, 'config')
E    +    where <src.storage.db_manager.DBManager object at 0x7f4383575f10> = <tests.test_storage_modules_comprehensive.TestDBManager object at 0x7f4383723fd0>.db_manager
______________________ TestDBManager.test_get_companies_and_vacancies_count ______________________
tests/test_storage_modules_comprehensive.py:124: in test_get_companies_and_vacancies_count
    assert len(result) == 3
E   AssertionError: assert 12 == 3
E    +  where 12 = len([('Яндекс', 0), ('Тинькофф', 0), ('СБЕР', 0), ('Wildberries', 0), ('OZON', 0), ('VK', 0), ...])
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:308 Нет подключения к базе данных
______________________________ TestDBManager.test_get_all_vacancies ______________________________
tests/test_storage_modules_comprehensive.py:144: in test_get_all_vacancies
    assert len(result) == 2
E   assert 0 == 2
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927932079248'>, исправляем...
_______________________________ TestDBManager.test_get_avg_salary ________________________________
tests/test_storage_modules_comprehensive.py:158: in test_get_avg_salary
    assert result == 125000.0
E   assert 1.0 == 125000.0
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927925072720'>, исправляем...
______________________ TestDBManager.test_get_vacancies_with_higher_salary _______________________
tests/test_storage_modules_comprehensive.py:175: in test_get_vacancies_with_higher_salary
    assert len(result) == 2
E   assert 0 == 2
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927932885584'>, исправляем...
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927932363920'>, исправляем...
_________________________ TestDBManager.test_get_vacancies_with_keyword __________________________
tests/test_storage_modules_comprehensive.py:191: in test_get_vacancies_with_keyword
    assert len(result) == 1
E   assert 0 == 1
E    +  where 0 = len([])
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:139 Поле company_id имеет неправильный тип <MagicMock name='mock.__enter__().cursor().__enter__().fetchone().__getitem__()' id='139927932847056'>, исправляем...
____________________ TestDBManager.test_db_manager_connection_error_handling _____________________
tests/test_storage_modules_comprehensive.py:200: in test_db_manager_connection_error_handling
    assert result == []
E   AssertionError: assert [('Яндекс', 0...'VK', 0), ...] == []
E     
E     Left contains 12 more items, first extra item: ('Яндекс', 0)
E     Use -v to get more diff
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.db_manager:db_manager.py:308 Нет подключения к базе данных
_____________________________ TestPostgresSaver.test_save_vacancies ______________________________
tests/test_storage_modules_comprehensive.py:242: in test_save_vacancies
    assert mock_cursor.execute.called
E   AssertionError: assert False
E    +  where False = <Mock name='connect().cursor().execute' id='139927931161552'>.called
E    +    where <Mock name='connect().cursor().execute' id='139927931161552'> = <Mock name='connect().cursor()' id='139927931077392'>.execute
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.storage.postgres_saver:postgres_saver.py:1685 Не удалось распознать формат даты: <Mock name='mock.published_at' id='139927931189392'>
WARNING  src.storage.postgres_saver:postgres_saver.py:1685 Не удалось распознать формат даты: <Mock name='mock.published_at' id='139927933620880'>
WARNING  src.storage.postgres_saver:postgres_saver.py:1685 Не удалось распознать формат даты: <Mock name='mock.published_at' id='139927933627408'>
_________________________ TestStorageFactory.test_create_invalid_storage _________________________
tests/test_storage_modules_comprehensive.py:303: in test_create_invalid_storage
    storage = StorageFactory.create_storage("invalid_type")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/storage/storage_factory.py:20: in create_storage
    raise ValueError(f"Поддерживается только PostgreSQL хранилище, получен: {storage_type}")
E   ValueError: Поддерживается только PostgreSQL хранилище, получен: invalid_type
_________________ TestDatabaseConnection.test_database_connection_establishment __________________
tests/test_storage_modules_comprehensive.py:330: in test_database_connection_establishment
    assert connection == mock_conn
E   AssertionError: assert <MagicMock name='mock.connect()' id='139927933080784'> == <Mock name='connect()' id='139927933087696'>
_________________ TestDatabaseConnection.test_database_connection_error_handling _________________
tests/test_storage_modules_comprehensive.py:346: in test_database_connection_error_handling
    assert connection is None
E   AssertionError: assert <MagicMock name='mock.connect()' id='139927933080784'> is None
__________________ TestVacancyRepository.test_vacancy_repository_initialization __________________
tests/test_storage_modules_comprehensive.py:364: in test_vacancy_repository_initialization
    assert hasattr(self.vacancy_repository, 'db_manager')
E   AssertionError: assert False
E    +  where False = hasattr(<src.storage.components.vacancy_repository.VacancyRepository object at 0x7f4382577490>, 'db_manager')
E    +    where <src.storage.components.vacancy_repository.VacancyRepository object at 0x7f4382577490> = <tests.test_storage_modules_comprehensive.TestVacancyRepository object at 0x7f438373d650>.vacancy_repository
___________________________ TestVacancyRepository.test_delete_vacancy ____________________________
src/storage/components/vacancy_repository.py:159: in delete_vacancy
    with self._db_connection.get_connection() as conn:
E   TypeError: 'Mock' object does not support the context manager protocol

During handling of the above exception, another exception occurred:
tests/test_storage_modules_comprehensive.py:407: in test_delete_vacancy
    result = self.vacancy_repository.delete_vacancy("test_123")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/storage/components/vacancy_repository.py:173: in delete_vacancy
    logger.error(f"Ошибка удаления вакансии {vacancy.vacancy_id}: {e}")
                                             ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'vacancy_id'
________________________ TestVacancyValidator.test_get_validation_errors _________________________
tests/test_storage_modules_comprehensive.py:466: in test_get_validation_errors
    errors = self.validator.get_validation_errors(vacancy)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyValidator.get_validation_errors() takes 1 positional argument but 2 were given
_______________________ TestStorageIntegration.test_full_storage_workflow ________________________
tests/test_storage_modules_comprehensive.py:620: in test_full_storage_workflow
    with patch('src.storage.postgres_saver.DatabaseConfig'):
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../src/storage/postgres_saver.py'> does not have the attribute 'DatabaseConfig'
_______________________ TestStorageIntegration.test_storage_error_recovery _______________________
tests/test_storage_modules_comprehensive.py:636: in test_storage_error_recovery
    with patch('src.storage.postgres_saver.DatabaseConfig'):
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../src/storage/postgres_saver.py'> does not have the attribute 'DatabaseConfig'
___________________ TestStorageIntegration.test_storage_performance_simulation ___________________
tests/test_storage_modules_comprehensive.py:661: in test_storage_performance_simulation
    with patch('src.storage.postgres_saver.DatabaseConfig'):
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../src/storage/postgres_saver.py'> does not have the attribute 'DatabaseConfig'
_____________________ TestUserInterface.test_main_interface_startup_and_exit _____________________
tests/test_ui_interfaces_comprehensive.py:427: in test_main_interface_startup_and_exit
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_____________________ TestUserInterface.test_main_interface_menu_navigation ______________________
tests/test_ui_interfaces_comprehensive.py:440: in test_main_interface_menu_navigation
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
__________________________ TestUserInterface.test_cache_clearing_option __________________________
tests/test_ui_interfaces_comprehensive.py:471: in test_cache_clearing_option
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_________________________ TestUserInterface.test_db_manager_demo_option __________________________
tests/test_ui_interfaces_comprehensive.py:487: in test_db_manager_demo_option
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_________________________ TestSourceSelector.test_get_user_source_choice _________________________
tests/test_ui_interfaces_comprehensive.py:149: in test_get_user_source_choice
    assert choice is None or isinstance(choice, list)
E   AssertionError: assert ({'hh.ru'} is None or False)
E    +  where False = isinstance({'hh.ru'}, list)
-------------------------------------- Captured stdout call --------------------------------------

==================================================
ВЫБОР ИСТОЧНИКОВ ВАКАНСИЙ
==================================================
Выберите источники для поиска вакансий:
1. HH.ru
2. SuperJob.ru
3. Оба источника
0. Отмена
==================================================
Выбран источник: HH.ru
_________________________ TestUIPerformance.test_pagination_performance __________________________
tests/test_ui_interfaces_comprehensive.py:580: in test_pagination_performance
    paginator = Paginator(large_dataset, page_size=100)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
_________________________ TestUserInterfaceComplete.test_start_interface _________________________
tests/test_user_interface_complete.py:34: in test_start_interface
    with patch.object(self.user_interface, 'show_main_menu', return_value=None):
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <src.ui_interfaces.console_interface.UserInterface object at 0x7f43827f3c10> does not have the attribute 'show_main_menu'
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
________________________ TestUserInterfaceComplete.test_display_vacancies ________________________
tests/test_user_interface_complete.py:98: in test_display_vacancies
    Vacancy(
E   TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
--------------------------------------- Captured log setup ---------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
________________________ TestUserInterfaceComponents.test_search_handler _________________________
tests/test_user_interface_comprehensive.py:80: in test_search_handler
    assert ui.unified_api.search_vacancies_from_all_sources.called
E   AssertionError: assert False
E    +  where False = <Mock id='139927929038800'>.called
E    +    where <Mock id='139927929038800'> = <src.api_modules.unified_api.UnifiedAPI object at 0x7f4382810190>.search_vacancies_from_all_sources
E    +      where <src.api_modules.unified_api.UnifiedAPI object at 0x7f4382810190> = <src.ui_interfaces.console_interface.UserInterface object at 0x7f43828101d0>.unified_api

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:83: in test_search_handler
    pytest.fail(f"search handler should not raise exceptions: {e}")
E   Failed: search handler should not raise exceptions: assert False
E    +  where False = <Mock id='139927929038800'>.called
E    +    where <Mock id='139927929038800'> = <src.api_modules.unified_api.UnifiedAPI object at 0x7f4382810190>.search_vacancies_from_all_sources
E    +      where <src.api_modules.unified_api.UnifiedAPI object at 0x7f4382810190> = <src.ui_interfaces.console_interface.UserInterface object at 0x7f43828101d0>.unified_api
-------------------------------------- Captured stderr call --------------------------------------
Fetching pages: 100%|██████████| 1/1 [00:00<00:00, 1780.26page/s, vacancies=3]
Fetching pages: 100%|██████████| 1/1 [00:00<00:00, 2502.57page/s, vacancies=0]
Fetching pages: 100%|██████████| 1/1 [00:00<00:00, 902.19page/s, vacancies=17]
Fetching pages: 100%|██████████| 1/1 [00:00<00:00, 2870.84page/s, vacancies=0]
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
ERROR    src.ui_interfaces.vacancy_search_handler:vacancy_search_handler.py:218 check_vacancies_exist_batch вернул неожиданный тип: <class 'unittest.mock.Mock'>
ERROR    src.ui_interfaces.vacancy_search_handler:vacancy_search_handler.py:70 Ошибка поиска вакансий:
______________________ TestUserInterfaceComponents.test_unified_api_methods ______________________
tests/test_user_interface_comprehensive.py:183: in test_unified_api_methods
    assert hasattr(ui.unified_api, 'search_vacancies_from_all_sources')
E   AssertionError: assert False
E    +  where False = hasattr(<src.api_modules.unified_api.UnifiedAPI object at 0x7f4382b63f10>, 'search_vacancies_from_all_sources')
E    +    where <src.api_modules.unified_api.UnifiedAPI object at 0x7f4382b63f10> = <src.ui_interfaces.console_interface.UserInterface object at 0x7f4382b61dd0>.unified_api
--------------------------------------- Captured log call ----------------------------------------
WARNING  src.api_modules.sj_api:sj_api.py:55 Используется тестовый API ключ SuperJob.                 Для полной функциональности добавьте реальный ключ                 в переменную окружения SUPERJOB_API_KEY
_______________________ TestMainApplicationFlow.test_main_application_exit _______________________
tests/test_user_interface_comprehensive.py:235: in test_main_application_exit
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_________________ TestMainApplicationFlow.test_main_application_search_workflow __________________
tests/test_user_interface_comprehensive.py:249: in test_main_application_search_workflow
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_________________ TestMainApplicationFlow.test_main_application_display_workflow _________________
tests/test_user_interface_comprehensive.py:270: in test_main_application_display_workflow
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
__________________ TestMainApplicationFlow.test_main_application_demo_workflow ___________________
tests/test_user_interface_comprehensive.py:291: in test_main_application_demo_workflow
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
__________________ TestMainApplicationFlow.test_main_application_invalid_choice __________________
tests/test_user_interface_comprehensive.py:315: in test_main_application_invalid_choice
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
_____________________ TestErrorHandling.test_create_instances_error_handling _____________________
tests/test_user_interface_comprehensive.py:331: in test_create_instances_error_handling
    with patch('src.user_interface.PostgresSaver', side_effect=Exception("Database error")):
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'PostgresSaver'
__________________________ TestErrorHandling.test_search_error_handling __________________________
tests/test_user_interface_comprehensive.py:348: in test_search_error_handling
    search_and_save_vacancies(mock_unified_api, mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'search_and_save_vacancies' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:351: in test_search_error_handling
    pytest.fail(f"search function should handle API errors: {e}")
E   Failed: search function should handle API errors: name 'search_and_save_vacancies' is not defined
_________________________ TestErrorHandling.test_storage_error_handling __________________________
tests/test_user_interface_comprehensive.py:359: in test_storage_error_handling
    display_all_vacancies(mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'display_all_vacancies' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:362: in test_storage_error_handling
    pytest.fail(f"display function should handle storage errors: {e}")
E   Failed: display function should handle storage errors: name 'display_all_vacancies' is not defined
________________________ TestErrorHandling.test_db_manager_error_handling ________________________
tests/test_user_interface_comprehensive.py:370: in test_db_manager_error_handling
    display_database_statistics(mock_db_manager)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'display_database_statistics' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:373: in test_db_manager_error_handling
    pytest.fail(f"statistics function should handle DB errors: {e}")
E   Failed: statistics function should handle DB errors: name 'display_database_statistics' is not defined
______________________ TestInputValidation.test_empty_search_query_handling ______________________
tests/test_user_interface_comprehensive.py:387: in test_empty_search_query_handling
    search_and_save_vacancies(mock_unified_api, mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'search_and_save_vacancies' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:389: in test_empty_search_query_handling
    pytest.fail(f"Should handle empty search query: {e}")
E   Failed: Should handle empty search query: name 'search_and_save_vacancies' is not defined
_____________________ TestInputValidation.test_invalid_salary_input_handling _____________________
tests/test_user_interface_comprehensive.py:398: in test_invalid_salary_input_handling
    filter_vacancies_by_salary(mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'filter_vacancies_by_salary' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:400: in test_invalid_salary_input_handling
    pytest.fail(f"Should handle invalid salary input: {e}")
E   Failed: Should handle invalid salary input: name 'filter_vacancies_by_salary' is not defined
__________________ TestInputValidation.test_invalid_confirmation_input_handling __________________
tests/test_user_interface_comprehensive.py:408: in test_invalid_confirmation_input_handling
    clear_vacancy_data(mock_storage)
    ^^^^^^^^^^^^^^^^^^
E   NameError: name 'clear_vacancy_data' is not defined

During handling of the above exception, another exception occurred:
tests/test_user_interface_comprehensive.py:410: in test_invalid_confirmation_input_handling
    pytest.fail(f"Should handle invalid confirmation input: {e}")
E   Failed: Should handle invalid confirmation input: name 'clear_vacancy_data' is not defined
____________________________ TestDataFlow.test_search_to_storage_flow ____________________________
tests/test_user_interface_comprehensive.py:429: in test_search_to_storage_flow
    search_and_save_vacancies(mock_unified_api, mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'search_and_save_vacancies' is not defined
___________________________ TestDataFlow.test_storage_to_display_flow ____________________________
tests/test_user_interface_comprehensive.py:450: in test_storage_to_display_flow
    display_all_vacancies(mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'display_all_vacancies' is not defined
_______________________________ TestDataFlow.test_filter_data_flow _______________________________
tests/test_user_interface_comprehensive.py:468: in test_filter_data_flow
    filter_vacancies_by_salary(mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'filter_vacancies_by_salary' is not defined
_____________ TestUserInterfaceIntegration.test_complete_search_and_display_workflow _____________
tests/test_user_interface_comprehensive.py:480: in test_complete_search_and_display_workflow
    with patch('src.user_interface.create_storage_and_api_instances') as mock_create:
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_interface.py'> does not have the attribute 'create_storage_and_api_instances'
___________ TestUserInterfaceIntegration.test_interface_performance_with_large_dataset ___________
tests/test_user_interface_comprehensive.py:522: in test_interface_performance_with_large_dataset
    display_all_vacancies(mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'display_all_vacancies' is not defined
________________ TestUserInterfaceIntegration.test_concurrent_operations_handling ________________
tests/test_user_interface_comprehensive.py:537: in test_concurrent_operations_handling
    search_and_save_vacancies(mock_unified_api, mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'search_and_save_vacancies' is not defined
__________________ TestUserInterfaceAccessibility.test_menu_display_formatting ___________________
tests/test_user_interface_comprehensive.py:550: in test_menu_display_formatting
    display_main_menu()
    ^^^^^^^^^^^^^^^^^
E   NameError: name 'display_main_menu' is not defined
____________________ TestUserInterfaceAccessibility.test_progress_indication _____________________
tests/test_user_interface_comprehensive.py:581: in test_progress_indication
    search_and_save_vacancies(mock_unified_api, mock_storage)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'search_and_save_vacancies' is not defined
____________________________ TestEnvLoader.test_load_env_file_success ____________________________
tests/test_utilities_comprehensive.py:86: in test_load_env_file_success
    assert os.environ.get('TEST_KEY') == 'test_value'
E   AssertionError: assert None == 'test_value'
E    +  where None = get('TEST_KEY')
E    +    where get = environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu...er', 'PYTEST_CURRENT_TEST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_success (call)'}).get
E    +      where environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu...er', 'PYTEST_CURRENT_TEST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_success (call)'}) = os.environ
_________________ TestEnvLoader.test_load_env_file_with_comments_and_empty_lines _________________
tests/test_utilities_comprehensive.py:110: in test_load_env_file_with_comments_and_empty_lines
    assert os.environ.get('TEST_KEY') == 'test_value'
E   AssertionError: assert None == 'test_value'
E    +  where None = get('TEST_KEY')
E    +    where get = environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu...EST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_comments_and_empty_lines (call)'}).get
E    +      where environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu...EST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_comments_and_empty_lines (call)'}) = os.environ
__________________________ TestEnvLoader.test_load_env_file_with_quotes __________________________
tests/test_utilities_comprehensive.py:121: in test_load_env_file_with_quotes
    assert os.environ.get('QUOTED_KEY') == 'quoted value'
E   AssertionError: assert None == 'quoted value'
E    +  where None = get('QUOTED_KEY')
E    +    where get = environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu... 'PYTEST_CURRENT_TEST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_quotes (call)'}).get
E    +      where environ({'POETRY_PIP_NO_ISOLATE': '1', 'COLORTERM': 'truecolor', 'POETRY_PIP_NO_PREFIX': '1', 'HISTCONTROL': 'ignoredu... 'PYTEST_CURRENT_TEST': 'tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_quotes (call)'}) = os.environ
____________________________ TestFileCache.test_cache_valid_response _____________________________
tests/test_utilities_comprehensive.py:202: in test_cache_valid_response
    assert self.cache._is_valid_response(invalid_data, {}) is False
E   assert True is False
E    +  where True = _is_valid_response({}, {})
E    +    where _is_valid_response = <src.utils.cache.FileCache object at 0x7f4382580f90>._is_valid_response
E    +      where <src.utils.cache.FileCache object at 0x7f4382580f90> = <tests.test_utilities_comprehensive.TestFileCache object at 0x7f4383c0fb90>.cache
_______________________________ TestSalary.test_salary_comparison ________________________________
tests/test_utilities_comprehensive.py:317: in test_salary_comparison
    assert isinstance(salary1 > salary2, bool)
                      ^^^^^^^^^^^^^^^^^
E   TypeError: '>' not supported between instances of 'Salary' and 'Salary'
__________________________ TestSalary.test_salary_string_representation __________________________
tests/test_utilities_comprehensive.py:324: in test_salary_string_representation
    assert "100000" in str_repr or "150000" in str_repr
E   AssertionError: assert ('100000' in 'от 100,000 до 150,000 руб. в месяц' or '150000' in 'от 100,000 до 150,000 руб. в месяц')
_________________________ TestVacancyFormatter.test_format_salary_range __________________________
tests/test_utilities_comprehensive.py:455: in test_format_salary_range
    assert "100000" in formatted
E   AssertionError: assert '100000' in 'от 100,000 до 150,000 руб. в месяц'
______________________________ TestUIHelpers.test_confirm_action_no ______________________________
tests/test_utilities_comprehensive.py:480: in test_confirm_action_no
    assert result is False
E   assert True is False
________________ TestUtilitiesIntegration.test_pagination_and_navigation_workflow ________________
tests/test_utilities_comprehensive.py:825: in test_pagination_and_navigation_workflow
    paginator = Paginator(items, page_size=10)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: Paginator() takes no arguments
_____________________________ TestVacancy.test_vacancy_html_cleaning _____________________________
tests/test_vacancy_modules_comprehensive.py:417: in test_vacancy_html_cleaning
    assert "<p>" not in vacancy.description
E   AssertionError: assert '<p>' not in '<p>Test <b>...HTML</a></p>'
E     
E     '<p>' is contained here:
E       <p>Test <b>description</b> with <a href='#'>HTML</a></p>
E     ? +++
_________________________ TestBaseParser.test_base_parser_initialization _________________________
tests/test_vacancy_modules_comprehensive.py:515: in test_base_parser_initialization
    parser = BaseParser()
             ^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseParser with abstract methods parse_vacancies, parse_vacancy
________________________ TestBaseParser.test_base_parser_abstract_methods ________________________
tests/test_vacancy_modules_comprehensive.py:520: in test_base_parser_abstract_methods
    parser = BaseParser()
             ^^^^^^^^^^^^
E   TypeError: Can't instantiate abstract class BaseParser with abstract methods parse_vacancies, parse_vacancy
________________________ TestHHParser.test_hh_parser_parse_single_vacancy ________________________
tests/test_vacancy_modules_comprehensive.py:547: in test_hh_parser_parse_single_vacancy
    assert isinstance(vacancy, Vacancy)
E   AssertionError: assert False
E    +  where False = isinstance({'area': 'Москва', 'employer': 'Яндекс', 'employment': 'Полная занятость', 'experience': 'От 1 года до 3 лет', ...}, Vacancy)
___________________________ TestHHParser.test_hh_parser_salary_parsing ___________________________
tests/test_vacancy_modules_comprehensive.py:572: in test_hh_parser_salary_parsing
    assert vacancy.salary is not None
           ^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'salary'
__________________________ TestHHParser.test_hh_parser_employer_parsing __________________________
tests/test_vacancy_modules_comprehensive.py:580: in test_hh_parser_employer_parsing
    assert isinstance(vacancy.employer, Employer)
                      ^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'employer'
___________________________ TestHHParser.test_hh_parser_missing_fields ___________________________
tests/test_vacancy_modules_comprehensive.py:609: in test_hh_parser_missing_fields
    assert isinstance(vacancy, Vacancy)
E   AssertionError: assert False
E    +  where False = isinstance({'area': '', 'employer': '', 'employment': '', 'experience': '', ...}, Vacancy)
_____________________ TestSuperJobParser.test_sj_parser_parse_single_vacancy _____________________
tests/test_vacancy_modules_comprehensive.py:631: in test_sj_parser_parse_single_vacancy
    assert isinstance(vacancy, Vacancy)
E   AssertionError: assert False
E    +  where False = isinstance({'area': 'Москва', 'description': 'Разработка и поддержка веб-приложений', 'employer': 'IT Компания', 'employment': 'Полная занятость', ...}, Vacancy)
________________________ TestSuperJobParser.test_sj_parser_salary_parsing ________________________
tests/test_vacancy_modules_comprehensive.py:656: in test_sj_parser_salary_parsing
    assert vacancy.salary is not None
           ^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'salary'
_______________________ TestSuperJobParser.test_sj_parser_employer_parsing _______________________
tests/test_vacancy_modules_comprehensive.py:664: in test_sj_parser_employer_parsing
    assert isinstance(vacancy.employer, Employer)
                      ^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'employer'
______________________ TestSuperJobParser.test_sj_parser_timestamp_handling ______________________
tests/test_vacancy_modules_comprehensive.py:672: in test_sj_parser_timestamp_handling
    assert isinstance(vacancy.published_at, datetime)
                      ^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'published_at'
___________________ TestVacancyModelsIntegration.test_full_parsing_workflow_hh ___________________
tests/test_vacancy_modules_comprehensive.py:696: in test_full_parsing_workflow_hh
    assert isinstance(vacancy, Vacancy)
E   AssertionError: assert False
E    +  where False = isinstance({'area': 'Москва', 'employer': 'Яндекс', 'employment': 'Полная занятость', 'experience': 'От 1 года до 3 лет', ...}, Vacancy)
___________________ TestVacancyModelsIntegration.test_full_parsing_workflow_sj ___________________
tests/test_vacancy_modules_comprehensive.py:708: in test_full_parsing_workflow_sj
    parser = SJParser()
             ^^^^^^^^
E   NameError: name 'SJParser' is not defined
__________________ TestVacancyModelsIntegration.test_cross_format_compatibility __________________
tests/test_vacancy_modules_comprehensive.py:731: in test_cross_format_compatibility
    sj_parser = SJParser()
                ^^^^^^^^
E   NameError: name 'SJParser' is not defined
_______________________ TestVacancyRepository.test_vacancy_repository_init _______________________
tests/test_vacancy_repository.py:39: in test_vacancy_repository_init
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
____________________________ TestVacancyRepository.test_save_vacancy _____________________________
tests/test_vacancy_repository.py:47: in test_save_vacancy
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
__________________________ TestVacancyRepository.test_get_vacancy_by_id __________________________
tests/test_vacancy_repository.py:62: in test_get_vacancy_by_id
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
__________________________ TestVacancyRepository.test_get_all_vacancies __________________________
tests/test_vacancy_repository.py:78: in test_get_all_vacancies
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
___________________________ TestVacancyRepository.test_update_vacancy ____________________________
tests/test_vacancy_repository.py:90: in test_update_vacancy
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
___________________________ TestVacancyRepository.test_delete_vacancy ____________________________
tests/test_vacancy_repository.py:101: in test_delete_vacancy
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
_____________________ TestVacancyRepository.test_find_vacancies_by_criteria ______________________
tests/test_vacancy_repository.py:113: in test_find_vacancies_by_criteria
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
___________________________ TestVacancyRepository.test_count_vacancies ___________________________
tests/test_vacancy_repository.py:126: in test_count_vacancies
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
________________________ TestVacancyRepository.test_batch_save_vacancies _________________________
tests/test_vacancy_repository.py:138: in test_batch_save_vacancies
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
____________________ TestVacancyRepository.test_get_vacancies_by_salary_range ____________________
tests/test_vacancy_repository.py:151: in test_get_vacancies_by_salary_range
    repo = VacancyRepository({})
           ^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
________________________ TestVacancyValidator.test_get_validation_errors _________________________
tests/test_vacancy_validator.py:130: in test_get_validation_errors
    errors = self.validator.get_validation_errors(self.invalid_vacancy)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: VacancyValidator.get_validation_errors() takes 1 positional argument but 2 were given
==================================== short test summary info =====================================
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_initialization - AssertionError: assert PosixPath('/tmp/tmpxqypg2fv') == '/tmp/tmpxqypg2fv'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_set_get_string - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_set_get_dict - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_get_nonexistent - AttributeError: 'FileCache' object has no attribute 'get'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_get_with_default - AttributeError: 'FileCache' object has no attribute 'get'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_has_existing - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_delete_existing - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_delete_nonexistent - AttributeError: 'FileCache' object has no attribute 'delete'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_clear - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_advanced_coverage_comprehensive.py::TestFileCacheComprehensive::test_cache_file_corruption_handling - AttributeError: 'FileCache' object has no attribute 'get'
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_initialization_full - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_initialization_partial - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_initialization_minimal - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_get_average - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_get_average_partial - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_is_specified - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_str_representation - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_comparison - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_to_dict - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestSalaryComprehensive::test_salary_from_dict - AttributeError: type object 'Salary' has no attribute 'from_dict'
FAILED tests/test_advanced_coverage_comprehensive.py::TestMenuManagerComprehensive::test_menu_manager_display - TypeError: MenuManager.display_menu() takes 1 positional argument but 2 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestVacancyParsersComprehensive::test_hh_parser_parse_vacancy - AttributeError: 'dict' object has no attribute 'get_title'
FAILED tests/test_advanced_coverage_comprehensive.py::TestVacancyParsersComprehensive::test_sj_parser_parse_vacancy - AttributeError: 'dict' object has no attribute 'get_title'
FAILED tests/test_advanced_coverage_comprehensive.py::TestVacancyParsersComprehensive::test_parser_handle_missing_data - AttributeError: 'dict' object has no attribute 'get_title'
FAILED tests/test_advanced_coverage_comprehensive.py::TestVacancyParsersComprehensive::test_parser_handle_invalid_data - AssertionError: assert ({'area': '', 'employer': '', 'employment': '', 'experience': '', ...}...
FAILED tests/test_advanced_coverage_comprehensive.py::TestDecoratorsComprehensive::test_simple_cache_decorator - assert <function simple_cache.<locals>.decorator.<locals>.wrapper at 0x7f4383a12c00> == 10
FAILED tests/test_advanced_coverage_comprehensive.py::TestCompleteModuleCoverage::test_storage_modules_complete_coverage - assert False is True
FAILED tests/test_advanced_coverage_comprehensive.py::TestCompleteModuleCoverage::test_ui_modules_complete_coverage - AttributeError: 'SourceSelector' object has no attribute 'get_user_choice'
FAILED tests/test_advanced_coverage_comprehensive.py::TestCompleteModuleCoverage::test_utility_modules_complete_coverage - AssertionError: assert 'test_value' == 'default'
FAILED tests/test_advanced_coverage_comprehensive.py::TestCompleteModuleCoverage::test_vacancy_models_complete_coverage - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_advanced_coverage_comprehensive.py::TestCompleteModuleCoverage::test_performance_and_caching_complete_coverage - AssertionError: assert <function simple_cache.<locals>.decorator.<locals>.wrapper at 0x7f4383...
FAILED tests/test_api_modules_comprehensive.py::TestHeadHunterAPI::test_hh_api_search_vacancies_success - assert 0 == 1
FAILED tests/test_api_modules_comprehensive.py::TestHeadHunterAPI::test_hh_api_get_vacancy_details - AttributeError: 'HeadHunterAPI' object has no attribute 'get_vacancy_details'
FAILED tests/test_api_modules_comprehensive.py::TestSuperJobAPI::test_sj_api_search_vacancies_success - assert 0 == 1
FAILED tests/test_api_modules_comprehensive.py::TestCachedAPI::test_cached_api_search_with_caching - AssertionError: Expected 'get_vacancies' to not have been called. Called 1 times.
FAILED tests/test_api_modules_comprehensive.py::TestCachedAPI::test_cached_api_clear_cache - TypeError: CachedAPI.clear_cache() missing 1 required positional argument: 'api_prefix'
FAILED tests/test_api_modules_comprehensive.py::TestUnifiedAPI::test_unified_api_search_all_sources - AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
FAILED tests/test_api_modules_comprehensive.py::TestUnifiedAPI::test_unified_api_search_specific_source - AttributeError: 'UnifiedAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules_comprehensive.py::TestUnifiedAPI::test_unified_api_get_available_sources - AssertionError: assert ('hh.ru' in ['hh', 'sj'] or 'superjob.ru' in ['hh', 'sj'])
FAILED tests/test_api_modules_comprehensive.py::TestUnifiedAPI::test_unified_api_error_handling - AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
FAILED tests/test_api_modules_comprehensive.py::TestAPIConnector::test_api_connector_connect - ConnectionError: Unexpected error: 'NoneType' object has no attribute 'items'
FAILED tests/test_api_modules_comprehensive.py::TestAPIConnector::test_api_connector_error_handling - NameError: name 'requests' is not defined
FAILED tests/test_api_modules_comprehensive.py::TestAPIConnector::test_api_connector_with_params - ConnectionError: Connection error: HTTPSConnectionPool(host='test.api', port=443): Max retrie...
FAILED tests/test_api_modules_comprehensive.py::TestAPIIntegration::test_full_search_workflow - AttributeError: 'UnifiedAPI' object has no attribute 'get_vacancies'
FAILED tests/test_comprehensive_final.py::TestSpecialModules::test_vacancy_storage_service_full_coverage - TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delet...
FAILED tests/test_config_modules_comprehensive.py::TestAPIConfig::test_api_config_initialization - AssertionError: assert False
FAILED tests/test_config_modules_comprehensive.py::TestAPIConfig::test_api_config_abstract_methods - AttributeError: 'APIConfig' object has no attribute 'get_base_url'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_urls - AttributeError: 'HHAPIConfig' object has no attribute 'get_base_url'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_headers - AttributeError: 'HHAPIConfig' object has no attribute 'get_headers'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_default_parameters - AttributeError: 'HHAPIConfig' object has no attribute 'get_default_parameters'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_salary_filter_enabled - AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_salary_filter_disabled - AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
FAILED tests/test_config_modules_comprehensive.py::TestHHAPIConfig::test_hh_config_salary_filter_default - AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_urls - AttributeError: 'SJAPIConfig' object has no attribute 'get_base_url'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_headers - AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_with_api_key - AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_without_api_key - AttributeError: 'SJAPIConfig' object has no attribute 'get_headers'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_parameters - AttributeError: 'SJAPIConfig' object has no attribute 'get_default_parameters'
FAILED tests/test_config_modules_comprehensive.py::TestSJAPIConfig::test_sj_config_salary_filter - AttributeError: 'SJAPIConfig' object has no attribute 'should_filter_by_salary'
FAILED tests/test_config_modules_comprehensive.py::TestDatabaseConfig::test_db_config_initialization - AttributeError: 'DatabaseConfig' object has no attribute 'default_storage_type'
FAILED tests/test_config_modules_comprehensive.py::TestTargetCompanies::test_company_ids_extraction - AssertionError: assert False
FAILED tests/test_config_modules_comprehensive.py::TestConfigIntegration::test_environment_variables_propagation - AttributeError: 'HHAPIConfig' object has no attribute 'should_filter_by_salary'
FAILED tests/test_core_modules_comprehensive.py::TestUserInterfaceModule::test_main_function_success - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_core_modules_comprehensive.py::TestUserInterfaceModule::test_main_function_db_connection_error - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_core_modules_comprehensive.py::TestUserInterfaceModule::test_main_function_db_initialization_error - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_core_modules_comprehensive.py::TestUserInterfaceModule::test_main_function_keyboard_interrupt - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_get_connection_fallback - AttributeError: <module 'src.storage.db_manager' from '/home/runner/workspace/tests/../src/st...
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_check_connection_success - assert False is True
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_create_tables_success - TypeError: 'Mock' object does not support the context manager protocol
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_add_company_success - AttributeError: 'DBManager' object has no attribute 'add_company'
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_add_company_duplicate - AttributeError: 'DBManager' object has no attribute 'add_company'
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_add_vacancy_success - AttributeError: 'DBManager' object has no attribute 'add_vacancy'
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_get_companies_and_vacancies_count - AssertionError: assert 12 == 2
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_get_avg_salary - assert None == 150000.0
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_get_vacancies_with_higher_salary - assert 0 == 1
FAILED tests/test_core_modules_comprehensive.py::TestDBManagerComprehensive::test_get_vacancies_with_keyword - assert 0 == 1
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_with_salary - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_validation_valid - AttributeError: 'Vacancy' object has no attribute 'is_valid'
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_validation_invalid_title - AttributeError: 'Vacancy' object has no attribute 'is_valid'
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_validation_invalid_url - AttributeError: 'Vacancy' object has no attribute 'is_valid'
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_to_dict - TypeError: Salary.__init__() takes from 1 to 2 positional arguments but 4 were given
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_from_dict - AssertionError: assert 'Python, Fast...d development' == 'Python, FastAPI'
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_comparison - assert <src.vacancies.models.Vacancy object at 0x7f438407c7a0> == <src.vacancies.models.Vacan...
FAILED tests/test_core_modules_comprehensive.py::TestVacancyModels::test_vacancy_str_repr - AssertionError: assert 'Python Developer' in '<src.vacancies.models.Vacancy object at 0x7f438...
FAILED tests/test_core_modules_comprehensive.py::TestAppConfigComprehensive::test_app_config_default_values - AssertionError: assert 'postgres' in ['postgresql', 'json', 'memory']
FAILED tests/test_core_modules_comprehensive.py::TestStorageFactoryComprehensive::test_storage_factory_postgresql - ValueError: Поддерживается только PostgreSQL хранилище, получен: postgresql
FAILED tests/test_core_modules_comprehensive.py::TestStorageFactoryComprehensive::test_storage_factory_json - ValueError: Поддерживается только PostgreSQL хранилище, получен: json
FAILED tests/test_database_connection.py::TestDatabaseConnection::test_database_connection_init - AssertionError: assert False
FAILED tests/test_database_connection.py::TestDatabaseConnection::test_close_connection - TypeError: DatabaseConnection.close_connection() takes 1 positional argument but 2 were given
FAILED tests/test_final_complete_coverage.py::TestCompleteAPIModuleCoverage::test_base_job_api_complete_coverage - TypeError: Can't instantiate abstract class TestAPI with abstract methods _validate_vacancy, ...
FAILED tests/test_final_complete_coverage.py::TestCompleteAPIModuleCoverage::test_headhunter_api_complete_coverage - AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'
FAILED tests/test_final_complete_coverage.py::TestCompleteAPIModuleCoverage::test_superjob_api_complete_coverage - AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'
FAILED tests/test_final_complete_coverage.py::TestCompleteAPIModuleCoverage::test_cached_api_complete_coverage - TypeError: Can't instantiate abstract class TestCachedAPI with abstract methods _get_empty_re...
FAILED tests/test_final_complete_coverage.py::TestCompleteAPIModuleCoverage::test_unified_api_complete_coverage - TypeError: UnifiedAPI.clear_cache() missing 1 required positional argument: 'sources'
FAILED tests/test_final_complete_coverage.py::TestCompleteStorageModuleCoverage::test_db_manager_complete_coverage - AssertionError: Expected 'execute' to have been called.
FAILED tests/test_final_complete_coverage.py::TestCompleteStorageModuleCoverage::test_storage_factory_complete_coverage - ValueError: Поддерживается только PostgreSQL хранилище, получен: postgresql
FAILED tests/test_final_complete_coverage.py::TestCompleteUIModuleCoverage::test_source_selector_complete_coverage - assert 0 > 0
FAILED tests/test_final_complete_coverage.py::TestCompleteUtilityModuleCoverage::test_file_cache_complete_coverage - AttributeError: 'FileCache' object has no attribute 'set'
FAILED tests/test_final_complete_coverage.py::TestCompleteUtilityModuleCoverage::test_vacancy_formatter_complete_coverage - TypeError: VacancyFormatter.format_salary() takes 2 positional arguments but 4 were given
FAILED tests/test_final_complete_coverage.py::TestCompleteVacancyModelCoverage::test_salary_model_complete_coverage - UnboundLocalError: cannot access local variable 'Salary' where it is not associated with a value
FAILED tests/test_final_complete_coverage.py::TestCompleteConfigurationCoverage::test_app_config_complete_coverage - AssertionError: assert 'postgres' in ['postgresql', 'json', 'memory']
FAILED tests/test_final_complete_coverage.py::TestOverallSystemCoverage::test_security_and_validation - AssertionError: assert ('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_db_manager_initialization - AssertionError: assert False
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_get_companies_and_vacancies_count - AssertionError: assert 12 == 3
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_get_all_vacancies - assert 0 == 2
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_get_avg_salary - assert 1.0 == 125000.0
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_get_vacancies_with_higher_salary - assert 0 == 2
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_get_vacancies_with_keyword - assert 0 == 1
FAILED tests/test_storage_modules_comprehensive.py::TestDBManager::test_db_manager_connection_error_handling - AssertionError: assert [('Яндекс', 0...'VK', 0), ...] == []
FAILED tests/test_storage_modules_comprehensive.py::TestPostgresSaver::test_save_vacancies - AssertionError: assert False
FAILED tests/test_storage_modules_comprehensive.py::TestStorageFactory::test_create_invalid_storage - ValueError: Поддерживается только PostgreSQL хранилище, получен: invalid_type
FAILED tests/test_storage_modules_comprehensive.py::TestDatabaseConnection::test_database_connection_establishment - AssertionError: assert <MagicMock name='mock.connect()' id='139927933080784'> == <Mock name='...
FAILED tests/test_storage_modules_comprehensive.py::TestDatabaseConnection::test_database_connection_error_handling - AssertionError: assert <MagicMock name='mock.connect()' id='139927933080784'> is None
FAILED tests/test_storage_modules_comprehensive.py::TestVacancyRepository::test_vacancy_repository_initialization - AssertionError: assert False
FAILED tests/test_storage_modules_comprehensive.py::TestVacancyRepository::test_delete_vacancy - AttributeError: 'str' object has no attribute 'vacancy_id'
FAILED tests/test_storage_modules_comprehensive.py::TestVacancyValidator::test_get_validation_errors - TypeError: VacancyValidator.get_validation_errors() takes 1 positional argument but 2 were given
FAILED tests/test_storage_modules_comprehensive.py::TestStorageIntegration::test_full_storage_workflow - AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../sr...
FAILED tests/test_storage_modules_comprehensive.py::TestStorageIntegration::test_storage_error_recovery - AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../sr...
FAILED tests/test_storage_modules_comprehensive.py::TestStorageIntegration::test_storage_performance_simulation - AttributeError: <module 'src.storage.postgres_saver' from '/home/runner/workspace/tests/../sr...
FAILED tests/test_ui_interfaces_comprehensive.py::TestUserInterface::test_main_interface_startup_and_exit - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_ui_interfaces_comprehensive.py::TestUserInterface::test_main_interface_menu_navigation - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_ui_interfaces_comprehensive.py::TestUserInterface::test_cache_clearing_option - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_ui_interfaces_comprehensive.py::TestUserInterface::test_db_manager_demo_option - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_ui_interfaces_comprehensive.py::TestSourceSelector::test_get_user_source_choice - AssertionError: assert ({'hh.ru'} is None or False)
FAILED tests/test_ui_interfaces_comprehensive.py::TestUIPerformance::test_pagination_performance - TypeError: Paginator() takes no arguments
FAILED tests/test_user_interface_complete.py::TestUserInterfaceComplete::test_start_interface - AttributeError: <src.ui_interfaces.console_interface.UserInterface object at 0x7f43827f3c10> ...
FAILED tests/test_user_interface_complete.py::TestUserInterfaceComplete::test_display_vacancies - TypeError: Vacancy.__init__() got an unexpected keyword argument 'id'
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceComponents::test_search_handler - Failed: search handler should not raise exceptions: assert False
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceComponents::test_unified_api_methods - AssertionError: assert False
FAILED tests/test_user_interface_comprehensive.py::TestMainApplicationFlow::test_main_application_exit - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestMainApplicationFlow::test_main_application_search_workflow - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestMainApplicationFlow::test_main_application_display_workflow - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestMainApplicationFlow::test_main_application_demo_workflow - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestMainApplicationFlow::test_main_application_invalid_choice - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestErrorHandling::test_create_instances_error_handling - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestErrorHandling::test_search_error_handling - Failed: search function should handle API errors: name 'search_and_save_vacancies' is not def...
FAILED tests/test_user_interface_comprehensive.py::TestErrorHandling::test_storage_error_handling - Failed: display function should handle storage errors: name 'display_all_vacancies' is not de...
FAILED tests/test_user_interface_comprehensive.py::TestErrorHandling::test_db_manager_error_handling - Failed: statistics function should handle DB errors: name 'display_database_statistics' is no...
FAILED tests/test_user_interface_comprehensive.py::TestInputValidation::test_empty_search_query_handling - Failed: Should handle empty search query: name 'search_and_save_vacancies' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestInputValidation::test_invalid_salary_input_handling - Failed: Should handle invalid salary input: name 'filter_vacancies_by_salary' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestInputValidation::test_invalid_confirmation_input_handling - Failed: Should handle invalid confirmation input: name 'clear_vacancy_data' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestDataFlow::test_search_to_storage_flow - NameError: name 'search_and_save_vacancies' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestDataFlow::test_storage_to_display_flow - NameError: name 'display_all_vacancies' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestDataFlow::test_filter_data_flow - NameError: name 'filter_vacancies_by_salary' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceIntegration::test_complete_search_and_display_workflow - AttributeError: <module 'src.user_interface' from '/home/runner/workspace/tests/../src/user_i...
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceIntegration::test_interface_performance_with_large_dataset - NameError: name 'display_all_vacancies' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceIntegration::test_concurrent_operations_handling - NameError: name 'search_and_save_vacancies' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceAccessibility::test_menu_display_formatting - NameError: name 'display_main_menu' is not defined
FAILED tests/test_user_interface_comprehensive.py::TestUserInterfaceAccessibility::test_progress_indication - NameError: name 'search_and_save_vacancies' is not defined
FAILED tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_success - AssertionError: assert None == 'test_value'
FAILED tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_comments_and_empty_lines - AssertionError: assert None == 'test_value'
FAILED tests/test_utilities_comprehensive.py::TestEnvLoader::test_load_env_file_with_quotes - AssertionError: assert None == 'quoted value'
FAILED tests/test_utilities_comprehensive.py::TestFileCache::test_cache_valid_response - assert True is False
FAILED tests/test_utilities_comprehensive.py::TestSalary::test_salary_comparison - TypeError: '>' not supported between instances of 'Salary' and 'Salary'
FAILED tests/test_utilities_comprehensive.py::TestSalary::test_salary_string_representation - AssertionError: assert ('100000' in 'от 100,000 до 150,000 руб. в месяц' or '150000' in 'от 1...
FAILED tests/test_utilities_comprehensive.py::TestVacancyFormatter::test_format_salary_range - AssertionError: assert '100000' in 'от 100,000 до 150,000 руб. в месяц'
FAILED tests/test_utilities_comprehensive.py::TestUIHelpers::test_confirm_action_no - assert True is False
FAILED tests/test_utilities_comprehensive.py::TestUtilitiesIntegration::test_pagination_and_navigation_workflow - TypeError: Paginator() takes no arguments
FAILED tests/test_vacancy_modules_comprehensive.py::TestVacancy::test_vacancy_html_cleaning - AssertionError: assert '<p>' not in '<p>Test <b>...HTML</a></p>'
FAILED tests/test_vacancy_modules_comprehensive.py::TestBaseParser::test_base_parser_initialization - TypeError: Can't instantiate abstract class BaseParser with abstract methods parse_vacancies,...
FAILED tests/test_vacancy_modules_comprehensive.py::TestBaseParser::test_base_parser_abstract_methods - TypeError: Can't instantiate abstract class BaseParser with abstract methods parse_vacancies,...
FAILED tests/test_vacancy_modules_comprehensive.py::TestHHParser::test_hh_parser_parse_single_vacancy - AssertionError: assert False
FAILED tests/test_vacancy_modules_comprehensive.py::TestHHParser::test_hh_parser_salary_parsing - AttributeError: 'dict' object has no attribute 'salary'
FAILED tests/test_vacancy_modules_comprehensive.py::TestHHParser::test_hh_parser_employer_parsing - AttributeError: 'dict' object has no attribute 'employer'
FAILED tests/test_vacancy_modules_comprehensive.py::TestHHParser::test_hh_parser_missing_fields - AssertionError: assert False
FAILED tests/test_vacancy_modules_comprehensive.py::TestSuperJobParser::test_sj_parser_parse_single_vacancy - AssertionError: assert False
FAILED tests/test_vacancy_modules_comprehensive.py::TestSuperJobParser::test_sj_parser_salary_parsing - AttributeError: 'dict' object has no attribute 'salary'
FAILED tests/test_vacancy_modules_comprehensive.py::TestSuperJobParser::test_sj_parser_employer_parsing - AttributeError: 'dict' object has no attribute 'employer'
FAILED tests/test_vacancy_modules_comprehensive.py::TestSuperJobParser::test_sj_parser_timestamp_handling - AttributeError: 'dict' object has no attribute 'published_at'
FAILED tests/test_vacancy_modules_comprehensive.py::TestVacancyModelsIntegration::test_full_parsing_workflow_hh - AssertionError: assert False
FAILED tests/test_vacancy_modules_comprehensive.py::TestVacancyModelsIntegration::test_full_parsing_workflow_sj - NameError: name 'SJParser' is not defined
FAILED tests/test_vacancy_modules_comprehensive.py::TestVacancyModelsIntegration::test_cross_format_compatibility - NameError: name 'SJParser' is not defined
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_vacancy_repository_init - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_save_vacancy - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_get_vacancy_by_id - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_get_all_vacancies - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_update_vacancy - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_delete_vacancy - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_find_vacancies_by_criteria - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_count_vacancies - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_batch_save_vacancies - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_repository.py::TestVacancyRepository::test_get_vacancies_by_salary_range - TypeError: VacancyRepository.__init__() missing 1 required positional argument: 'validator'
FAILED tests/test_vacancy_validator.py::TestVacancyValidator::test_get_validation_errors - TypeError: VacancyValidator.get_validation_errors() takes 1 positional argument but 2 were given
ERROR tests/test_advanced_coverage_comprehensive.py::TestPaginatorComprehensive::test_paginator_initialization - TypeError: Paginator() takes no arguments
ERROR tests/test_advanced_coverage_comprehensive.py::TestPaginatorComprehensive::test_paginator_get_page - TypeError: Paginator() takes no arguments
ERROR tests/test_advanced_coverage_comprehensive.py::TestPaginatorComprehensive::test_paginator_get_total_pages - TypeError: Paginator() takes no arguments
ERROR tests/test_advanced_coverage_comprehensive.py::TestPaginatorComprehensive::test_paginator_has_next_page - TypeError: Paginator() takes no arguments
ERROR tests/test_advanced_coverage_comprehensive.py::TestPaginatorComprehensive::test_paginator_has_previous_page - TypeError: Paginator() takes no arguments
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_main_application_interface_init - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_start_application - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_stop_application - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_initialize_components - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_run_main_loop - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_handle_user_input - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_show_main_menu - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_cleanup_resources - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_api_integration - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_storage_integration - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_main_application_interface.py::TestMainApplicationInterface::test_error_handling - TypeError: MainApplicationInterface.__init__() missing 3 required positional arguments: 'prov...
ERROR tests/test_storage_modules_comprehensive.py::TestVacancyStorageService::test_storage_service_initialization - TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delet...
ERROR tests/test_storage_modules_comprehensive.py::TestVacancyStorageService::test_process_and_save_vacancies - TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delet...
ERROR tests/test_storage_modules_comprehensive.py::TestVacancyStorageService::test_apply_filters - TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delet...
ERROR tests/test_storage_modules_comprehensive.py::TestVacancyStorageService::test_deduplicate_vacancies - TypeError: Can't instantiate abstract class VacancyStorageService with abstract methods delet...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_typed_data_processor_init - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_process_data_dict - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_process_data_list - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_validate_types_valid_data - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_validate_types_invalid_data - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_convert_types_string_to_int - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_convert_types_preserve_existing - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_process_nested_structures - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_handle_none_values - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_process_empty_data - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_type_conversion_safety - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_batch_processing - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...
ERROR tests/test_typed_data_processor.py::TestTypedDataProcessor::test_schema_validation - TypeError: Can't instantiate abstract class TypedDataProcessor with abstract methods process_...