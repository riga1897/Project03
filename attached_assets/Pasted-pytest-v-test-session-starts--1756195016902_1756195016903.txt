pytest -v
=============================================== test session starts ===============================================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0 -- /nix/store/2lcqw1d28vklbk8ikiwad28iq2smwndv-python-wrapped-0.1.0/bin/python3
cachedir: .pytest_cache
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: cov-6.2.1, mock-3.14.1
collected 184 items                                                                                               

tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_hh_data_by_salary_range PASSED                [  0%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_sj_data_by_salary_range PASSED                [  1%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_by_keywords PASSED                            [  1%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_by_location PASSED                            [  2%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_by_experience PASSED                          [  2%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_by_employment_type PASSED                     [  3%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_by_company PASSED                             [  3%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_complex_filter_chain PASSED                          [  4%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_empty_filter_results PASSED                          [  4%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_with_empty_data PASSED                        [  5%]
tests/test_api_data_filter.py::TestAPIDataFilter::test_filter_invalid_data_structure PASSED                 [  5%]
tests/test_api_modules.py::TestHeadHunterAPI::test_api_initialization PASSED                                [  6%]
tests/test_api_modules.py::TestHeadHunterAPI::test_validate_vacancy_valid PASSED                            [  7%]
tests/test_api_modules.py::TestHeadHunterAPI::test_validate_vacancy_invalid PASSED                          [  7%]
tests/test_api_modules.py::TestHeadHunterAPI::test_get_vacancies_page_success PASSED                        [  8%]
tests/test_api_modules.py::TestHeadHunterAPI::test_get_vacancies_empty_response PASSED                      [  8%]
tests/test_api_modules.py::TestHeadHunterAPI::test_empty_response_structure PASSED                          [  9%]
tests/test_api_modules.py::TestSuperJobAPI::test_api_initialization_with_custom_key PASSED                  [  9%]
tests/test_api_modules.py::TestSuperJobAPI::test_validate_vacancy_valid PASSED                              [ 10%]
tests/test_api_modules.py::TestSuperJobAPI::test_validate_vacancy_invalid PASSED                            [ 10%]
tests/test_api_modules.py::TestSuperJobAPI::test_get_vacancies_page_with_source PASSED                      [ 11%]
tests/test_api_modules.py::TestSuperJobAPI::test_empty_response_structure PASSED                            [ 11%]
tests/test_cache.py::TestFileCache::test_cache_initialization PASSED                                        [ 12%]
tests/test_cache.py::TestFileCache::test_generate_params_hash PASSED                                        [ 13%]
tests/test_cache.py::TestFileCache::test_generate_params_hash_different_params PASSED                       [ 13%]
tests/test_cache.py::TestFileCache::test_save_and_load_response PASSED                                      [ 14%]
tests/test_cache.py::TestFileCache::test_load_response_nonexistent PASSED                                   [ 14%]
tests/test_cache.py::TestFileCache::test_clear_cache_source PASSED                                          [ 15%]
tests/test_cache.py::TestFileCache::test_clear_cache_all PASSED                                             [ 15%]
tests/test_cache.py::TestFileCache::test_cache_with_complex_params PASSED                                   [ 16%]
tests/test_cache.py::TestFileCache::test_cache_file_corrupted PASSED                                        [ 16%]
tests/test_cache.py::TestFileCache::test_cache_unicode_support PASSED                                       [ 17%]
tests/test_config.py::TestAppConfig::test_default_initialization PASSED                                     [ 17%]
tests/test_config.py::TestAppConfig::test_get_storage_type PASSED                                           [ 18%]
tests/test_config.py::TestAppConfig::test_set_storage_type_valid PASSED                                     [ 19%]
tests/test_config.py::TestAppConfig::test_set_storage_type_invalid PASSED                                   [ 19%]
tests/test_config.py::TestAppConfig::test_get_db_config PASSED                                              [ 20%]
tests/test_config.py::TestAppConfig::test_db_config_from_env PASSED                                         [ 20%]
tests/test_config.py::TestDatabaseConfig::test_default_initialization SKIPPED (DatabaseConfig архитекту...) [ 21%]
tests/test_config.py::TestDatabaseConfig::test_initialization_with_env PASSED                               [ 21%]
tests/test_config.py::TestDatabaseConfig::test_get_connection_params PASSED                                 [ 22%]
tests/test_config.py::TestDatabaseConfig::test_get_dsn PASSED                                               [ 22%]
tests/test_config.py::TestDatabaseConfig::test_test_connection_success PASSED                               [ 23%]
tests/test_config.py::TestDatabaseConfig::test_test_connection_failure PASSED                               [ 23%]
tests/test_config.py::TestHHAPIConfig::test_initialization SKIPPED (HHAPIConfig архитектура изменена)       [ 24%]
tests/test_config.py::TestHHAPIConfig::test_get_headers PASSED                                              [ 25%]
tests/test_config.py::TestHHAPIConfig::test_get_vacancies_url PASSED                                        [ 25%]
tests/test_config.py::TestHHAPIConfig::test_get_employers_url PASSED                                        [ 26%]
tests/test_config.py::TestHHAPIConfig::test_get_areas_url PASSED                                            [ 26%]
tests/test_config.py::TestHHAPIConfig::test_get_request_params PASSED                                       [ 27%]
tests/test_config.py::TestSJAPIConfig::test_initialization PASSED                                           [ 27%]
tests/test_config.py::TestSJAPIConfig::test_initialization_with_secret_key PASSED                           [ 28%]
tests/test_config.py::TestSJAPIConfig::test_get_headers_without_key PASSED                                  [ 28%]
tests/test_config.py::TestSJAPIConfig::test_get_headers_with_key PASSED                                     [ 29%]
tests/test_config.py::TestSJAPIConfig::test_get_vacancies_url PASSED                                        [ 29%]
tests/test_config.py::TestSJAPIConfig::test_set_secret_key PASSED                                           [ 30%]
tests/test_config.py::TestSJAPIConfig::test_is_configured PASSED                                            [ 30%]
tests/test_config.py::TestSJAPIConfig::test_get_request_params PASSED                                       [ 31%]
tests/test_db_manager.py::TestDBManager::test_get_connection_success PASSED                                 [ 32%]
tests/test_db_manager.py::TestDBManager::test_get_connection_failure PASSED                                 [ 32%]
tests/test_db_manager.py::TestDBManager::test_create_tables_success PASSED                                  [ 33%]
tests/test_db_manager.py::TestDBManager::test_populate_companies_table PASSED                               [ 33%]
tests/test_db_manager.py::TestDBManager::test_get_companies_and_vacancies_count PASSED                      [ 34%]
tests/test_db_manager.py::TestDBManager::test_get_all_vacancies PASSED                                      [ 34%]
tests/test_db_manager.py::TestDBManager::test_get_avg_salary PASSED                                         [ 35%]
tests/test_db_manager.py::TestDBManager::test_get_avg_salary_no_data PASSED                                 [ 35%]
tests/test_db_manager.py::TestDBManager::test_get_vacancies_with_higher_salary FAILED                       [ 36%]
tests/test_db_manager.py::TestDBManager::test_get_vacancies_with_keyword FAILED                             [ 36%]
tests/test_db_manager.py::TestDBManager::test_get_vacancies_with_keyword_empty PASSED                       [ 37%]
tests/test_db_manager.py::TestDBManager::test_get_database_stats FAILED                                     [ 38%]
tests/test_db_manager.py::TestDBManager::test_check_connection_success PASSED                               [ 38%]
tests/test_db_manager.py::TestDBManager::test_check_connection_failure PASSED                               [ 39%]
tests/test_db_manager.py::TestDBManager::test_is_target_company_match PASSED                                [ 39%]
tests/test_db_manager_demo.py::TestDBManagerDemo::test_demo_initialization PASSED                           [ 40%]
tests/test_db_manager_demo.py::TestDBManagerDemo::test_run_full_demo FAILED                                 [ 40%]
tests/test_db_manager_demo.py::TestDBManagerDemo::test_get_db_manager_creation PASSED                       [ 41%]
tests/test_db_manager_demo.py::TestDBManagerDemo::test_display_connection_status FAILED                     [ 41%]
tests/test_file_handlers.py::TestJSONFileHandler::test_write_json_data PASSED                               [ 42%]
tests/test_file_handlers.py::TestJSONFileHandler::test_read_json_data PASSED                                [ 42%]
tests/test_file_handlers.py::TestJSONFileHandler::test_read_nonexistent_json_file PASSED                    [ 43%]
tests/test_file_handlers.py::TestJSONFileHandler::test_read_empty_json_file PASSED                          [ 44%]
tests/test_file_handlers.py::TestJSONFileHandler::test_read_invalid_json_file PASSED                        [ 44%]
tests/test_file_handlers.py::TestJSONFileHandler::test_write_creates_directory FAILED                       [ 45%]
tests/test_file_handlers.py::TestJSONFileHandler::test_atomic_write_on_error PASSED                         [ 45%]
tests/test_file_handlers.py::TestJSONFileHandler::test_cache_clearing_on_write PASSED                       [ 46%]
tests/test_file_handlers.py::TestJSONFileHandler::test_global_json_handler_instance PASSED                  [ 46%]
tests/test_file_handlers.py::TestJSONFileHandler::test_caching_behavior PASSED                              [ 47%]
tests/test_integration.py::TestAPIIntegration::test_hh_api_search_integration PASSED                        [ 47%]
tests/test_integration.py::TestAPIIntegration::test_sj_api_search_integration PASSED                        [ 48%]
tests/test_integration.py::TestStorageIntegration::test_postgres_saver_integration PASSED                   [ 48%]
tests/test_integration.py::TestCacheIntegration::test_cached_api_integration PASSED                         [ 49%]
tests/test_integration.py::TestFullWorkflowIntegration::test_search_and_save_workflow PASSED                [ 50%]
tests/test_integration.py::TestFullWorkflowIntegration::test_error_handling_integration PASSED              [ 50%]
tests/test_integration.py::TestFullWorkflowIntegration::test_data_consistency_integration PASSED            [ 51%]
tests/test_source_manager.py::TestSourceManager::test_source_manager_initialization PASSED                  [ 51%]
tests/test_source_manager.py::TestSourceManager::test_get_available_sources PASSED                          [ 52%]
tests/test_source_manager.py::TestSourceManager::test_get_source_config_hh PASSED                           [ 52%]
tests/test_source_manager.py::TestSourceManager::test_get_source_config_sj PASSED                           [ 53%]
tests/test_source_manager.py::TestSourceManager::test_get_source_config_invalid PASSED                      [ 53%]
tests/test_source_manager.py::TestSourceManager::test_is_source_available_true PASSED                       [ 54%]
tests/test_source_manager.py::TestSourceManager::test_is_source_available_false PASSED                      [ 54%]
tests/test_source_manager.py::TestSourceManager::test_get_source_display_name PASSED                        [ 55%]
tests/test_source_manager.py::TestSourceManager::test_get_source_api_limits PASSED                          [ 55%]
tests/test_source_manager.py::TestSourceManager::test_validate_source_credentials_hh PASSED                 [ 56%]
tests/test_source_manager.py::TestSourceManager::test_validate_source_credentials_sj_valid PASSED           [ 57%]
tests/test_source_manager.py::TestSourceManager::test_validate_source_credentials_sj_invalid FAILED         [ 57%]
tests/test_source_manager.py::TestSourceManager::test_get_source_priority PASSED                            [ 58%]
tests/test_source_manager.py::TestSourceManager::test_sort_sources_by_priority PASSED                       [ 58%]
tests/test_source_manager.py::TestSourceManager::test_get_source_features PASSED                            [ 59%]
tests/test_storage.py::TestPostgresSaver::test_postgres_saver_initialization PASSED                         [ 59%]
tests/test_storage.py::TestPostgresSaver::test_get_connection PASSED                                        [ 60%]
tests/test_storage.py::TestPostgresSaver::test_add_vacancy_with_sample_data PASSED                          [ 60%]
tests/test_storage.py::TestPostgresSaver::test_ensure_database_exists PASSED                                [ 61%]
tests/test_storage.py::TestPostgresSaver::test_format_vacancy_data PASSED                                   [ 61%]
tests/test_storage.py::TestStorageFactory::test_get_storage_postgres PASSED                                 [ 62%]
tests/test_storage.py::TestStorageFactory::test_get_storage_invalid_type PASSED                             [ 63%]
tests/test_storage.py::TestStorageFactory::test_get_storage_missing_config PASSED                           [ 63%]
tests/test_ui_helpers.py::TestUIHelpers::test_get_positive_integer_valid PASSED                             [ 64%]
tests/test_ui_helpers.py::TestUIHelpers::test_get_positive_integer_invalid_then_valid PASSED                [ 64%]
tests/test_ui_helpers.py::TestUIHelpers::test_get_positive_integer_non_numeric PASSED                       [ 65%]
tests/test_ui_helpers.py::TestUIHelpers::test_filter_vacancies_by_keyword_in_title PASSED                   [ 65%]
tests/test_ui_helpers.py::TestUIHelpers::test_filter_vacancies_by_keyword_in_description PASSED             [ 66%]
tests/test_ui_helpers.py::TestUIHelpers::test_filter_vacancies_by_keyword_case_insensitive PASSED           [ 66%]
tests/test_ui_helpers.py::TestUIHelpers::test_filter_vacancies_by_keyword_no_matches PASSED                 [ 67%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_both_values PASSED                         [ 67%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_only_min PASSED                            [ 68%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_only_max PASSED                            [ 69%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_single_value PASSED                        [ 69%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_invalid_format PASSED                      [ 70%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_empty_string PASSED                        [ 70%]
tests/test_ui_helpers.py::TestUIHelpers::test_parse_salary_range_with_spaces PASSED                         [ 71%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_brief PASSED                     [ 71%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_brief_no_number PASSED           [ 72%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_brief_no_salary PASSED           [ 72%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_brief_partial_salary PASSED      [ 73%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_info_with_dict PASSED            [ 73%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_vacancy_info_with_object PASSED          [ 74%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_display_vacancy_info PASSED                     [ 75%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_salary_dict PASSED                       [ 75%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_company_info PASSED                      [ 76%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_company_name PASSED                     [ 76%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_salary_info PASSED                      [ 77%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_description PASSED                      [ 77%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_responsibilities PASSED                 [ 78%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_requirements PASSED                     [ 78%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_extract_conditions PASSED                       [ 79%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_build_vacancy_lines PASSED                      [ 79%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_build_vacancy_lines_with_api_url PASSED         [ 80%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_salary_with_object PASSED                [ 80%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_salary_with_dict PASSED                  [ 81%]
tests/test_vacancy_formatter.py::TestVacancyFormatter::test_format_salary_none PASSED                       [ 82%]
tests/test_vacancy_models.py::TestVacancy::test_vacancy_creation_with_dict_salary PASSED                    [ 82%]
tests/test_vacancy_models.py::TestVacancy::test_vacancy_creation_without_salary PASSED                      [ 83%]
tests/test_vacancy_models.py::TestVacancy::test_vacancy_string_representation PASSED                        [ 83%]
tests/test_vacancy_models.py::TestVacancy::test_vacancy_comparison PASSED                                   [ 84%]
tests/test_vacancy_models.py::TestVacancy::test_vacancy_equality PASSED                                     [ 84%]
tests/test_vacancy_models.py::TestSalary::test_salary_creation_from_dict PASSED                             [ 85%]
tests/test_vacancy_models.py::TestSalary::test_salary_string_representation PASSED                          [ 85%]
tests/test_vacancy_models.py::TestSalary::test_salary_only_from PASSED                                      [ 86%]
tests/test_vacancy_models.py::TestSalary::test_salary_only_to PASSED                                        [ 86%]
tests/test_vacancy_models.py::TestSalary::test_salary_comparison PASSED                                     [ 87%]
tests/test_vacancy_models.py::TestSalary::test_source_detection_from_dict PASSED                            [ 88%]
tests/test_vacancy_models.py::TestSalary::test_source_fallback_detection PASSED                             [ 88%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_search_vacancies_advanced PASSED              [ 89%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_get_vacancies_with_salary PASSED              [ 89%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_sort_vacancies_by_salary PASSED               [ 90%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_filter_vacancies_by_multiple_keywords PASSED  [ 90%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_search_vacancies_advanced_and_operator PASSED [ 91%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_search_vacancies_advanced_or_operator PASSED  [ 91%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_search_vacancies_advanced_simple_query PASSED [ 92%]
tests/test_vacancy_operations.py::TestVacancyOperations::test_vacancy_operations_basic_functionality PASSED [ 92%]
tests/test_vacancy_stats.py::TestVacancyStats::test_get_company_distribution_dict_data PASSED               [ 93%]
tests/test_vacancy_stats.py::TestVacancyStats::test_get_company_distribution_vacancy_objects PASSED         [ 94%]
tests/test_vacancy_stats.py::TestVacancyStats::test_extract_company_name_hh_format PASSED                   [ 94%]
tests/test_vacancy_stats.py::TestVacancyStats::test_extract_company_name_sj_format PASSED                   [ 95%]
tests/test_vacancy_stats.py::TestVacancyStats::test_extract_company_name_vacancy_object PASSED              [ 95%]
tests/test_vacancy_stats.py::TestVacancyStats::test_extract_company_name_unknown PASSED                     [ 96%]
tests/test_vacancy_stats.py::TestVacancyStats::test_extract_company_name_empty_employer PASSED              [ 96%]
tests/test_vacancy_stats.py::TestVacancyStats::test_display_company_stats_with_data PASSED                  [ 97%]
tests/test_vacancy_stats.py::TestVacancyStats::test_display_company_stats_empty_data PASSED                 [ 97%]
tests/test_vacancy_stats.py::TestVacancyStats::test_display_source_stats PASSED                             [ 98%]
tests/test_vacancy_stats.py::TestVacancyStats::test_analyze_company_mapping PASSED                          [ 98%]
tests/test_vacancy_stats.py::TestVacancyStats::test_display_company_mapping_analysis PASSED                 [ 99%]
tests/test_vacancy_stats.py::TestVacancyStats::test_company_distribution_edge_cases PASSED                  [100%]

==================================================== FAILURES =====================================================
_______________________________ TestDBManager.test_get_vacancies_with_higher_salary _______________________________

self = <tests.test_db_manager.TestDBManager object at 0x7fd964bf61d0>
mock_connect = <MagicMock name='connect' id='140571669730832'>
db_manager = <src.storage.db_manager.DBManager object at 0x7fd96470ac50>

    @patch('src.storage.db_manager.psycopg2.connect')
    def test_get_vacancies_with_higher_salary(self, mock_connect, db_manager):
        """Тест получения вакансий с зарплатой выше средней"""
        mock_connection = Mock()
        mock_cursor = Mock()
        mock_connect.return_value = mock_connection
        mock_connection.__enter__ = Mock(return_value=mock_connection)
        mock_connection.__exit__ = Mock(return_value=None)
        mock_cursor_context = Mock()
        mock_cursor_context.__enter__ = Mock(return_value=mock_cursor)
        mock_cursor_context.__exit__ = Mock(return_value=None)
        mock_connection.cursor.return_value = mock_cursor_context
    
        # Мокаем get_avg_salary
        with patch.object(db_manager, 'get_avg_salary', return_value=100000.0):
            # Имитируем результат запроса
            mock_cursor.fetchall.return_value = [
                {
                    'title': 'Senior Python Developer',
                    'company_name': 'Test Company',
                    'salary_info': '150000 - 200000 RUR',
                    'url': 'https://test.com/vacancy/2',
                    'calculated_salary': 175000.0,
                    'vacancy_id': 'test_2',
                    'employer': 'Test Company'
                }
            ]
    
            result = db_manager.get_vacancies_with_higher_salary()
    
>           assert len(result) == 1
E           assert 0 == 1
E            +  where 0 = len([])

tests/test_db_manager.py:229: AssertionError
---------------------------------------------- Captured stderr call -----------------------------------------------
ERROR:src.storage.db_manager:Неожиданная ошибка в get_vacancies_with_higher_salary: 0
------------------------------------------------ Captured log call ------------------------------------------------
ERROR    src.storage.db_manager:db_manager.py:503 Неожиданная ошибка в get_vacancies_with_higher_salary: 0
__________________________________ TestDBManager.test_get_vacancies_with_keyword __________________________________

self = <tests.test_db_manager.TestDBManager object at 0x7fd964bf6650>
mock_connect = <MagicMock name='connect' id='140571665595984'>
db_manager = <src.storage.db_manager.DBManager object at 0x7fd9647ed0d0>

    @patch('src.storage.db_manager.psycopg2.connect')
    def test_get_vacancies_with_keyword(self, mock_connect, db_manager):
        """Тест поиска вакансий по ключевому слову"""
        mock_connection = Mock()
        mock_cursor = Mock()
        mock_connect.return_value = mock_connection
        mock_connection.__enter__ = Mock(return_value=mock_connection)
        mock_connection.__exit__ = Mock(return_value=None)
        mock_cursor_context = Mock()
        mock_cursor_context.__enter__ = Mock(return_value=mock_cursor)
        mock_cursor_context.__exit__ = Mock(return_value=None)
        mock_connection.cursor.return_value = mock_cursor_context
    
        # Имитируем результат запроса
        mock_cursor.fetchall.return_value = [
            {
                'title': 'Python Developer',
                'company_name': 'Test Company',
                'salary_info': '100000 - 150000 RUR',
                'url': 'https://test.com/vacancy/1',
                'description': 'Python development position',
                'vacancy_id': 'test_1',
                'employer': 'Test Company'
            }
        ]
    
        result = db_manager.get_vacancies_with_keyword('Python')
    
>       assert len(result) == 1
E       assert 0 == 1
E        +  where 0 = len([])

tests/test_db_manager.py:260: AssertionError
---------------------------------------------- Captured stderr call -----------------------------------------------
ERROR:src.storage.db_manager:Неожиданная ошибка в get_vacancies_with_keyword: 0
------------------------------------------------ Captured log call ------------------------------------------------
ERROR    src.storage.db_manager:db_manager.py:569 Неожиданная ошибка в get_vacancies_with_keyword: 0
______________________________________ TestDBManager.test_get_database_stats ______________________________________

self = <tests.test_db_manager.TestDBManager object at 0x7fd964bf7690>
mock_connect = <MagicMock name='connect' id='140571670154192'>
db_manager = <src.storage.db_manager.DBManager object at 0x7fd964368110>

    @patch('src.storage.db_manager.psycopg2.connect')
    def test_get_database_stats(self, mock_connect, db_manager):
        """Тест получения статистики БД"""
        mock_connection = Mock()
        mock_cursor = Mock()
        mock_connect.return_value = mock_connection
        mock_connection.__enter__ = Mock(return_value=mock_connection)
        mock_connection.__exit__ = Mock(return_value=None)
        mock_cursor_context = Mock()
        mock_cursor_context.__enter__ = Mock(return_value=mock_cursor)
        mock_cursor_context.__exit__ = Mock(return_value=None)
        mock_connection.cursor.return_value = mock_cursor_context
    
        # Имитируем результаты разных запросов
        mock_cursor.fetchone.side_effect = [[100], [15], [75], ['2024-01-15']]
    
        result = db_manager.get_database_stats()
    
>       assert result['total_vacancies'] == 100
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E       KeyError: 'total_vacancies'

tests/test_db_manager.py:293: KeyError
---------------------------------------------- Captured stderr call -----------------------------------------------
ERROR:src.storage.db_manager:Неожиданная ошибка при получении статистики БД: cannot convert dictionary update sequence element #0 to a sequence
------------------------------------------------ Captured log call ------------------------------------------------
ERROR    src.storage.db_manager:db_manager.py:649 Неожиданная ошибка при получении статистики БД: cannot convert dictionary update sequence element #0 to a sequence
______________________________________ TestDBManagerDemo.test_run_full_demo _______________________________________

self = <tests.test_db_manager_demo.TestDBManagerDemo object at 0x7fd964bf6410>
mock_print = <MagicMock name='print' id='140571674894992'>, mock_db_manager = <Mock id='140571669738704'>

    @patch('builtins.print')
    def test_run_full_demo(self, mock_print, mock_db_manager):
        """Тест запуска полной демонстрации"""
        demo = DBManagerDemo(db_manager=mock_db_manager)
>       demo.run_full_demo()

tests/test_db_manager_demo.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/utils/db_manager_demo.py:52: in run_full_demo
    self._demo_companies_and_vacancies_count()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <src.utils.db_manager_demo.DBManagerDemo object at 0x7fd964bf71d0>

    def _demo_companies_and_vacancies_count(self) -> None:
        """Демонстрирует метод get_companies_and_vacancies_count() для целевых компаний"""
        print("\n3. get_companies_and_vacancies_count() - Анализ вакансий по целевым компаниям:")
        print("-" * 80)
    
        from src.config.target_companies import TARGET_COMPANIES
    
        print("📋 Анализ показывает только данные от целевых компаний из конфигурации проекта")
        print("🎯 Метод фильтрует результаты и показывает статистику по всем 15 целевым компаниям")
        print()
    
        # Получаем данные специально по целевым компаниям
        companies_data = self.db_manager.get_target_companies_analysis()
    
        if not companies_data:
            print("❌ Нет данных о целевых компаниях")
            print("💡 Выполните поиск вакансий через пункт меню 1 для получения данных")
            return
    
        print(f"{'№':<3} {'Целевая компания':<35} {'Количество вакансий':<20}")
        print("-" * 80)
    
        total_vacancies = 0
        companies_with_vacancies = 0
    
        # Показываем результаты в том порядке, как они возвращены методом
        # (метод уже фильтрует и сопоставляет целевые компании)
>       for i, (company_name, vacancy_count) in enumerate(companies_data, 1):
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: 'Mock' object is not iterable

src/utils/db_manager_demo.py:126: TypeError
________________________________ TestDBManagerDemo.test_display_connection_status _________________________________

self = <tests.test_db_manager_demo.TestDBManagerDemo object at 0x7fd964bf6390>
mock_print = <MagicMock name='print' id='140571666243728'>, mock_db_manager = <Mock id='140571666237328'>

    @patch('builtins.print')
    def test_display_connection_status(self, mock_print, mock_db_manager):
        """Тест отображения статуса подключения"""
        demo = DBManagerDemo(db_manager=mock_db_manager)
>       demo._display_connection_status()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DBManagerDemo' object has no attribute '_display_connection_status'

tests/test_db_manager_demo.py:74: AttributeError
________________________________ TestJSONFileHandler.test_write_creates_directory _________________________________

self = <tests.test_file_handlers.TestJSONFileHandler object at 0x7fd9647c7d90>
sample_data = [{'id': '1', 'salary': 100000, 'title': 'Python Developer'}, {'id': '2', 'salary': 120000, 'title': 'Java Developer'}]

    def test_write_creates_directory(self, sample_data):
        """Тест создания директории при записи"""
        with tempfile.TemporaryDirectory() as temp_dir:
            temp_path = Path(temp_dir)
            nested_path = temp_path / "nested" / "deep" / "test.json"
    
            handler = JSONFileHandler()
            handler.write_json(nested_path, sample_data)
    
            assert nested_path.exists()
            loaded_data = handler.read_json(nested_path)
            assert loaded_data == sample_data
>           temp_dir.rmdir()
            ^^^^^^^^^^^^^^
E           AttributeError: 'str' object has no attribute 'rmdir'

tests/test_file_handlers.py:96: AttributeError
__________________________ TestSourceManager.test_validate_source_credentials_sj_invalid __________________________

self = <tests.test_source_manager.TestSourceManager object at 0x7fd964308510>

    def test_validate_source_credentials_sj_invalid(self):
        """Тест валидации учетных данных для SJ (невалидные)"""
        manager = SourceManager()
    
        credentials = {}  # Пустые учетные данные
>       is_valid = manager.validate_source_credentials("superjob.ru", credentials)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_source_manager.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <src.utils.source_manager.SourceManager object at 0x7fd964755690>, source = 'superjob.ru', credentials = {}

    def validate_source_credentials(self, source: str, credentials: Dict[str, Any]) -> bool:
        """
        Валидация учетных данных для источника
    
        Args:
            source: Идентификатор источника
            credentials: Словарь с учетными данными
    
        Returns:
            True если учетные данные валидны
        """
        if source == "hh.ru":
            # HH.ru не требует API ключа
            return True
        elif source == "superjob.ru":
            # SuperJob требует API ключ
            api_key = credentials.get("api_key")
            if not api_key:
                # Проверяем в переменных окружения
                config = SJAPIConfig()
>               return config.is_configured()
                       ^^^^^^^^^^^^^^^^^^^^
E               AttributeError: 'SJAPIConfig' object has no attribute 'is_configured'

src/utils/source_manager.py:124: AttributeError
============================================= short test summary info =============================================
FAILED tests/test_db_manager.py::TestDBManager::test_get_vacancies_with_higher_salary - assert 0 == 1
FAILED tests/test_db_manager.py::TestDBManager::test_get_vacancies_with_keyword - assert 0 == 1
FAILED tests/test_db_manager.py::TestDBManager::test_get_database_stats - KeyError: 'total_vacancies'
FAILED tests/test_db_manager_demo.py::TestDBManagerDemo::test_run_full_demo - TypeError: 'Mock' object is not iterable
FAILED tests/test_db_manager_demo.py::TestDBManagerDemo::test_display_connection_status - AttributeError: 'DBManagerDemo' object has no attribute '_display_connection_status'
FAILED tests/test_file_handlers.py::TestJSONFileHandler::test_write_creates_directory - AttributeError: 'str' object has no attribute 'rmdir'
FAILED tests/test_source_manager.py::TestSourceManager::test_validate_source_credentials_sj_invalid - AttributeError: 'SJAPIConfig' object has no attribute 'is_configured'
==================================== 7 failed, 175 passed, 2 skipped in 0.68s =====================================
~/workspace$ 