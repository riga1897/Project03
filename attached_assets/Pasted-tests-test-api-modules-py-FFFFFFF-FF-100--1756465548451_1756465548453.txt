tests/test_api_modules.py FFFFFFF..FF                                  [100%]

================================== FAILURES ==================================
_________________ TestHeadHunterAPI.test_api_initialization __________________

self = <tests.test_api_modules.TestHeadHunterAPI object at 0x7feadd61e2d0>

    def test_api_initialization(self):
        """Тест инициализации API"""
        api = HeadHunterAPI()
        assert api is not None
>       assert hasattr(api, 'search_vacancies')
E       AssertionError: assert False
E        +  where False = hasattr(<src.api_modules.hh_api.HeadHunterAPI object at 0x7feadc7f2250>, 'search_vacancies')

tests/test_api_modules.py:23: AssertionError
______________ TestHeadHunterAPI.test_search_vacancies_success _______________

self = <tests.test_api_modules.TestHeadHunterAPI object at 0x7feadc7cfa10>
mock_get = <MagicMock name='get' id='140646693839376'>

    @patch('requests.get')
    def test_search_vacancies_success(self, mock_get):
        """Тест успешного поиска вакансий"""
        # Настраиваем мок ответа
        mock_response = Mock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "items": [
                {
                    "id": "12345",
                    "name": "Python Developer",
                    "alternate_url": "https://hh.ru/vacancy/12345",
                    "salary": {"from": 100000, "to": 150000, "currency": "RUR"},
                    "snippet": {"requirement": "Python", "responsibility": "Development"},
                    "employer": {"name": "Test Company"},
                    "published_at": "2024-01-01T00:00:00+03:00"
                }
            ],
            "found": 1
        }
        mock_get.return_value = mock_response
    
        api = HeadHunterAPI()
>       vacancies = api.search_vacancies(query="Python", per_page=1)
                    ^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'

tests/test_api_modules.py:48: AttributeError
___________ TestHeadHunterAPI.test_search_vacancies_empty_response ___________

self = <tests.test_api_modules.TestHeadHunterAPI object at 0x7feadc7d80d0>
mock_get = <MagicMock name='get' id='140646693970064'>

    @patch('requests.get')
    def test_search_vacancies_empty_response(self, mock_get):
        """Тест поиска без результатов"""
        mock_response = Mock()
        mock_response.status_code = 200
        mock_response.json.return_value = {"items": [], "found": 0}
        mock_get.return_value = mock_response
    
        api = HeadHunterAPI()
>       vacancies = api.search_vacancies(query="NonExistentJob")
                    ^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'

tests/test_api_modules.py:63: AttributeError
___________ TestHeadHunterAPI.test_search_vacancies_network_error ____________

self = <tests.test_api_modules.TestHeadHunterAPI object at 0x7feadc7d8790>
mock_get = <MagicMock name='get' id='140646694087632'>

    @patch('requests.get')
    def test_search_vacancies_network_error(self, mock_get):
        """Тест обработки сетевой ошибки"""
        mock_get.side_effect = Exception("Network error")
    
        api = HeadHunterAPI()
>       vacancies = api.search_vacancies(query="Python")
                    ^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'

tests/test_api_modules.py:73: AttributeError
__________________ TestSuperJobAPI.test_api_initialization ___________________

self = <tests.test_api_modules.TestSuperJobAPI object at 0x7feadc7d8f90>

    def test_api_initialization(self):
        """Тест инициализации API"""
        api = SuperJobAPI()
        assert api is not None
>       assert hasattr(api, 'search_vacancies')
E       AssertionError: assert False
E        +  where False = hasattr(<src.api_modules.sj_api.SuperJobAPI object at 0x7feadc3a79d0>, 'search_vacancies')

tests/test_api_modules.py:85: AssertionError
_______________ TestSuperJobAPI.test_search_vacancies_success ________________

self = <tests.test_api_modules.TestSuperJobAPI object at 0x7feadc7d95d0>
mock_get = <MagicMock name='get' id='140646693671376'>

    @patch('requests.get')
    def test_search_vacancies_success(self, mock_get):
        """Тест успешного поиска вакансий"""
        mock_response = Mock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "objects": [
                {
                    "id": 54321,
                    "profession": "Java Developer",
                    "link": "https://superjob.ru/vakansii/java-developer-54321.html",
                    "payment_from": 80000,
                    "payment_to": 120000,
                    "currency": "rub",
                    "candidat": "Java, Spring",
                    "vacancyRichText": "Backend development",
                    "firm_name": "Java Corp",
                    "date_published": 1704067200
                }
            ],
            "total": 1
        }
        mock_get.return_value = mock_response
    
        api = SuperJobAPI()
>       vacancies = api.search_vacancies(query="Java", count=1)
                    ^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'

tests/test_api_modules.py:112: AttributeError
____________ TestSuperJobAPI.test_search_vacancies_empty_response ____________

self = <tests.test_api_modules.TestSuperJobAPI object at 0x7feadc7d9c50>
mock_get = <MagicMock name='get' id='140646694200912'>

    @patch('requests.get')
    def test_search_vacancies_empty_response(self, mock_get):
        """Тест поиска без результатов"""
        mock_response = Mock()
        mock_response.status_code = 200
        mock_response.json.return_value = {"objects": [], "total": 0}
        mock_get.return_value = mock_response
    
        api = SuperJobAPI()
>       vacancies = api.search_vacancies(query="NonExistentJob")
                    ^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'

tests/test_api_modules.py:127: AttributeError
_____________ TestUnifiedAPI.test_search_vacancies_single_source _____________

args = (<tests.test_api_modules.TestUnifiedAPI object at 0x7feadc7db190>,)
keywargs = {}

    @wraps(func)
    def patched(*args, **keywargs):
>       with self.decoration_helper(patched,
                                    args,
                                    keywargs) as (newargs, newkeywargs):

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1375: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1357: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/contextlib.py:517: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7feadc7cd650>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <class 'src.api_modules.hh_api.HeadHunterAPI'> does not have the attribute 'search_vacancies'

/nix/store/7d088dip86hlzri9sk0h78b63yfmx0a0-python3-3.11.13/lib/python3.11/unittest/mock.py:1419: AttributeError
______________________ TestUnifiedAPI.test_clear_cache _______________________

self = <tests.test_api_modules.TestUnifiedAPI object at 0x7feadc7db890>

    def test_clear_cache(self):
        """Тест очистки кэша"""
        api = UnifiedAPI()
        # Метод не должен вызывать исключений
>       api.clear_cache()
E       TypeError: UnifiedAPI.clear_cache() missing 1 required positional argument: 'sources'

tests/test_api_modules.py:167: TypeError
========================== short test summary info ===========================
FAILED tests/test_api_modules.py::TestHeadHunterAPI::test_api_initialization - AssertionError: assert False
FAILED tests/test_api_modules.py::TestHeadHunterAPI::test_search_vacancies_success - AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules.py::TestHeadHunterAPI::test_search_vacancies_empty_response - AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules.py::TestHeadHunterAPI::test_search_vacancies_network_error - AttributeError: 'HeadHunterAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules.py::TestSuperJobAPI::test_api_initialization - AssertionError: assert False
FAILED tests/test_api_modules.py::TestSuperJobAPI::test_search_vacancies_success - AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules.py::TestSuperJobAPI::test_search_vacancies_empty_response - AttributeError: 'SuperJobAPI' object has no attribute 'search_vacancies'
FAILED tests/test_api_modules.py::TestUnifiedAPI::test_search_vacancies_single_source - AttributeError: <class 'src.api_modules.hh_api.HeadHunterAPI'> does not h...
FAILED tests/test_api_modules.py::TestUnifiedAPI::test_clear_cache - TypeError: UnifiedAPI.clear_cache() missing 1 required positional argumen...
======================== 9 failed, 2 passed in 0.51s =========================